#!/bin/bash
if [ $AUTHOR == "gitpuller" ]; then
	echo "#!/bin/bash" > $LOCAL/../gitpuller
	echo "if [ \$SCRIPT_REPO == \"cm\" ]; then" >> $LOCAL/../gitpuller
	echo "	# below is examples, git pull is recommended" >> $LOCAL/../gitpuller
	echo "	# cd \$REPOS/cm-ics/where-in-the-repo-you-want-to-modify" >> $LOCAL/../gitpuller
	echo "	# git pull repo-you-want-to-pull" >> $LOCAL/../gitpuller
	echo "	exit 0" >> $LOCAL/../gitpuller
	echo "fi" >> $LOCAL/../gitpuller
	echo "" >> $LOCAL/../gitpuller
	echo "if [ \$SCRIPT_REPO == \"aosp\" ]; then" >> $LOCAL/../gitpuller
	echo "	# below is examples, git pull is recommended" >> $LOCAL/../gitpuller
	echo "	# cd \$REPOS/cm-ics/where-in-the-repo-you-want-to-modify" >> $LOCAL/../gitpuller
	echo "	# git pull repo-you-want-to-pull" >> $LOCAL/../gitpuller
	echo "	exit 0" >> $LOCAL/../gitpuller
	echo "fi" >> $LOCAL/../gitpuller
	echo "" >> $LOCAL/../gitpuller
	echo "if [ \$SCRIPT_REPO == \"rooted-aosp\" ]; then" >> $LOCAL/../gitpuller
	echo "	# below is examples, git pull is recommended" >> $LOCAL/../gitpuller
	echo "	# cd \$REPOS/cm-ics/where-in-the-repo-you-want-to-modify" >> $LOCAL/../gitpuller
	echo "	# git pull repo-you-want-to-pull" >> $LOCAL/../gitpuller
	echo "	exit 0" >> $LOCAL/../gitpuller
	echo "fi" >> $LOCAL/../gitpuller
fi

if [ $AUTHOR == "romeditor" ]; then
	echo "#!/bin/bash" > $LOCAL/../romeditor
	echo "if [ \$SCRIPT_REPO == \"cm\" ]; then" >> $LOCAL/../romeditor
	echo "	cd \$local/../../repos/cm-ics/vendor/cm/config" >> $LOCAL/../romeditor
	echo "	# uncomment (remove the #) and edit the EDITME! in between the slashes with ur rom manager developer id" >> $LOCAL/../romeditor
	echo "	# sed -i 's/cyanogenmod/EDITME!/g' common.mk" >> $LOCAL/../romeditor
	echo "	# uncomment (remove the #) and edit the EDITME! in between the slashes with the desired modversion (used for rom manager)" >> $LOCAL/../romeditor
	echo "	# sed -i 's/\$(CM_VERSION)/EDITME!/g' common.mk" >> $LOCAL/../romeditor
	echo "fi" >> $LOCAL/../romeditor
	echo "" >> $LOCAL/../romeditor
	echo "if [ \$SCRIPT_REPO == \"rooted-aosp\" ]; then" >> $LOCAL/../romeditor
	echo "	cd \$local/../../repos/rooted-aosp-ics/vendor/swordrune10" >> $LOCAL/../romeditor
	echo "	# uncomment (remove the #) and edit the EDITME! in between the slashes with ur rom manager developer id" >> $LOCAL/../romeditor
	echo "	# sed -i 's/\$(shell whoami)/EDITME!/g' overrider.mk" >> $LOCAL/../romeditor
	echo "	# uncomment (remove the #) and edit the EDITME! in between the slashes with the desired modversion (used for rom manager)" >> $LOCAL/../romeditor
	echo "	# sed -i 's/\$(MOD_VERSION)/EDITME!/g' overrider.mk" >> $LOCAL/../romeditor
	echo "fi" >> $LOCAL/../romeditor
fi

if [ $AUTHOR == "redeemer" ]; then
	echo "#!/bin/bash" > redeemer
	echo "echo \"Redeemer is running!\"" >> redeemer
	echo "echo \"\"" >> redeemer
	echo "echo \"Removing Kitchen\"" >> redeemer
	echo "echo \"\"" >> redeemer
	echo "rm -rf .repo" >> redeemer
	echo "rm -rf .scripts" >> redeemer
	echo "rm -f \"Swordrune10's Kitchen.sh\"" >> redeemer
	echo "echo \"Settng Up Kitchen\"" >> redeemer
	echo "echo \"\"" >> redeemer
	echo "repo init -u http://github.com/swordrune10/android_manifest.git -b master" >> redeemer
	echo "repo sync" >> redeemer
	echo "cd $LOCAL" >> redeemer
	echo "echo \"Finished! Press Enter to restart Kitchen\"" >> redeemer
	echo "read done" >> redeemer
fi

if [ $AUTHOR == "destroyer" ] || [ $AUTHOR == "destroyerofworlds" ]; then
	echo "#!/bin/bash" > $AUTHOR

	if [ $AUTHOR == "destroyer" ]; then
		echo "echo \"Destroyer is running!\"" >> destroyer
	fi

	if [ $AUTHOR == "destroyerofworlds" ]; then
		echo "echo \"Destroyer of Worlds is running!\"" >> destroyerofworlds
	fi

	echo "echo \"\"" >> $AUTHOR
	echo "echo \"Removing Kitchen\"" >> $AUTHOR
	echo "echo \"\"" >> $AUTHOR
	echo "rm -rf .repo" >> $AUTHOR
	echo "rm -rf .scripts" >> $AUTHOR
	echo "rm -f \"Swordrune10's Kitchen.sh\"" >> $AUTHOR
	echo "rm -f gitpuller" >> $AUTHOR

	if [ $AUTHOR == "destroyerofworlds" ]; then
		echo "rm -rf ../repos" >> destroyerofworlds
	fi

	echo "echo \"Finished! Press Enter to exit\"" >> $AUTHOR
	echo "read done" >> $AUTHOR
	echo "rm -f $AUTHOR" >> $AUTHOR
fi
