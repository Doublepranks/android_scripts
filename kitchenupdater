#!/bin/bash
# Written by Sean Donovan (swordrune10)
clear

processors=$( cat /proc/cpuinfo | grep "physical id" | sort -u | wc -l )
cores=$( cat /proc/cpuinfo | grep -m 1 "cpu cores" | grep -o [0-9] )
threads=$( cat /proc/cpuinfo | grep -m 1 siblings | grep -o [0-9] )

THREADS_TOTAL=$( expr $processors \* $threads \* $cores \* 2 )

export REPOS=$(echo "$LOCAL/../../repos")
echo "Swordrune10's Android Kitchen!"
echo "=============================="
echo "What are we updating?"
echo "  1. Update the Kitchen app repository"
echo "  2. Update the Android Open Kang Project repository"
echo "  3. Update the Android Open Source Project repository"
echo "  4. Update the Cyanogenmod 9 repository"
echo "  5. Update the Evervolv repository"
echo "  6. Update the Rooted & Busyboxed AOSP repository"
echo "  7. Update the Solana/Targa/Spyder Dev Team repository"
echo "  8. Update the Team Gummy repository"
echo "  9. Update all available repositories"
echo "  10. Go Back"
read version

if [ "$version" == "" ]; then
	echo ""
	echo "You did not make a proper selection, try again!"
	echo "Press Enter to continue"
	read done

	$LOCAL/kitchenupdater
	exit 0
fi

if ( echo $version | grep -q [A-Za-z] ); then
	echo ""
	echo "You did not make a proper selection, try again!"
	echo "Press Enter to continue"
	read done

	$LOCAL/kitchenupdater
	exit 0
fi

if [ $version -gt "10" ]; then
	echo ""
	echo "You did not make a proper selection, try again!"
	echo "Press Enter to continue"
	read done

	$LOCAL/kitchenupdater
	exit 0
fi

if [ $version == "1" ] || [ $version == "9" ]; then
	echo ""	
	echo "Updating the Kitchen app repository.."
	cd $LOCAL/..

	~/bin/repo sync -j$THREADS_TOTAL
	echo ""	
	echo "Kitchen Update Complete!"
fi

if [ $version == "2" ] || [ $version == "9" ]; then
	if ( find $REPOS/aokp-ics/.repo &> /dev/null); then
		export SCRIPT_REPO=$(echo "aokp")
		echo ""	
		echo "Updating the Android Open Kang Project repository.."
		cd $REPOS/aokp-ics
		rm -r vendor/aokp

		$LOCAL/preupdate
		~/bin/repo sync -j$THREADS_TOTAL

		if ( ! find $LOCAL/../gitpuller &> /dev/null ); then
			export AUTHOR="gitpuller"
			$LOCAL/scriptmakir
			chmod a+x $LOCAL/../gitpuller
		fi

		$LOCAL/../gitpuller

		$LOCAL/postupdate

		if ( ! find $LOCAL/../romeditor &> /dev/null ); then
			export AUTHOR="romeditor"
			$LOCAL/scriptmakir
			chmod a+x $LOCAL/../romeditor
		fi

		echo ""	
		echo "Android Open Kang Project Update Complete!"
	else
		echo ""	
		echo "Android Open Kang Project not initialized, aborting.. "
	fi
fi

if [ $version == "3" ] || [ $version == "9" ]; then
	if ( find $REPOS/aosp-ics/.repo &> /dev/null); then
		export SCRIPT_REPO=$(echo "aosp")
		echo ""	
		echo "Updating Android Open Source Project repository.."
		cd $REPOS/aosp-ics

		$LOCAL/preupdate
		~/bin/repo sync -j$THREADS_TOTAL

		if ( ! find $LOCAL/../gitpuller &> /dev/null ); then
			export AUTHOR="gitpuller"
			$LOCAL/scriptmakir
			chmod a+x $LOCAL/../gitpuller
		fi

		$LOCAL/../gitpuller

		$LOCAL/postupdate

		if ( ! find $LOCAL/../romeditor &> /dev/null ); then
			export AUTHOR="romeditor"
			$LOCAL/scriptmakir
			chmod a+x $LOCAL/../romeditor
		fi

		echo ""	
		echo "Android Open Source Project Update Complete!"
	else
		echo ""	
		echo "Android Open Source Project not initialized, aborting.. "
	fi
fi

if [ $version == "4" ] || [ $version == "9" ]; then
	if ( find $REPOS/cm-ics/.repo &> /dev/null); then
		export SCRIPT_REPO=$(echo "cm")
		echo ""	
		echo "Updating Cyanogenmod 9 repository.."
		cd $REPOS/cm-ics
		rm -r vendor/cm

		$LOCAL/preupdate
		~/bin/repo sync -j$THREADS_TOTAL

		if ( ! find $LOCAL/../gitpuller &> /dev/null ); then
			export AUTHOR="gitpuller"
			$LOCAL/scriptmakir
			chmod a+x $LOCAL/../gitpuller
		fi

		$LOCAL/../gitpuller

		$LOCAL/postupdate

		if ( ! find $LOCAL/../romeditor &> /dev/null ); then
			export AUTHOR="romeditor"
			$LOCAL/scriptmakir
			chmod a+x $LOCAL/../romeditor
		fi

		echo ""	
		echo "Cyanogenmod 9 Update Complete!"
	else
		echo ""	
		echo "Cyanogenmod 9 not initialized, aborting.. "
	fi
fi


if [ $version == "5" ] || [ $version == "9" ]; then
	if ( find $REPOS/evervolv-ics/.repo &> /dev/null); then
		export SCRIPT_REPO=$(echo "evervolv")
		echo ""	
		echo "Updating Evervolv repository.."
		cd $REPOS/evervolv-ics
		rm -r vendor/ev

		$LOCAL/preupdate
		~/bin/repo sync -j$THREADS_TOTAL

		if ( ! find $LOCAL/../gitpuller &> /dev/null ); then
			export AUTHOR="gitpuller"
			$LOCAL/scriptmakir
			chmod a+x $LOCAL/../gitpuller
		fi

		$LOCAL/../gitpuller

		$LOCAL/postupdate

		if ( ! find $LOCAL/../romeditor &> /dev/null ); then
			export AUTHOR="romeditor"
			$LOCAL/scriptmakir
			chmod a+x $LOCAL/../romeditor
		fi

		echo ""	
		echo "Evervolv Update Complete!"
	else
		echo ""	
		echo "Evervolv not initialized, aborting.. "
	fi
fi

if [ $version == "6" ] || [ $version == "9" ]; then
		if ( find $REPOS/rooted-aosp-ics/.repo &> /dev/null); then
		export SCRIPT_REPO=$(echo "rooted-aosp")
		echo ""	
		echo "Updating Rooted & Busyboxed AOSP repository.."
		cd $REPOS/rooted-aosp-ics
		rm -r vendor/swordrune10

		$LOCAL/preupdate
		~/bin/repo sync -j$THREADS_TOTAL

		if ( ! find $LOCAL/../gitpuller &> /dev/null ); then
			export AUTHOR="gitpuller"
			$LOCAL/scriptmakir
			chmod a+x $LOCAL/../gitpuller
		fi

		$LOCAL/../gitpuller

		$LOCAL/postupdate

		if ( ! find $LOCAL/../romeditor &> /dev/null ); then
			export AUTHOR="romeditor"
			$LOCAL/scriptmakir
			chmod a+x $LOCAL/../romeditor
		fi

		echo ""	
		echo "Rooted & Busyboxed AOSP Update Complete!"
	else
		echo ""	
		echo "Rooted & Busyboxed AOSP not initialized, aborting.. "
	fi
fi

if [ $version == "7" ] || [ $version == "9" ]; then
	if ( find $REPOS/sts-ics/.repo &> /dev/null); then
		export SCRIPT_REPO=$(echo "sts")
		echo ""	
		echo "Updating Solana/Targa/Spyder Dev Team repository.."
		cd $REPOS/sts-ics
		rm -r vendor/cm

		$LOCAL/preupdate
		~/bin/repo sync -j$THREADS_TOTAL

		if ( ! find $LOCAL/../gitpuller &> /dev/null ); then
			export AUTHOR="gitpuller"
			$LOCAL/scriptmakir
			chmod a+x $LOCAL/../gitpuller
		fi

		$LOCAL/../gitpuller
	
		$LOCAL/postupdate
	
		if ( ! find $LOCAL/../romeditor &> /dev/null ); then
			export AUTHOR="romeditor"
			$LOCAL/scriptmakir
			chmod a+x $LOCAL/../romeditor
		fi

		echo ""	
		echo "Solana/Targa/Spyder Dev Team Update Complete!"
	else
		echo ""	
		echo "Solana/Targa/Spyder Dev Team not initialized, aborting.. "
	fi
fi

if [ $version == "8" ] || [ $version == "9" ]; then
	if ( find $REPOS/gummy-ics/.repo &> /dev/null); then
		export SCRIPT_REPO=$(echo "gummy")
		echo ""	
		echo "Updating Team Gummy repository.."
		cd $REPOS/gummy-ics
		rm -r vendor/Gummy

		$LOCAL/preupdate
		~/bin/repo sync -j$THREADS_TOTAL

		if ( ! find $LOCAL/../gitpuller &> /dev/null ); then
			export AUTHOR="gitpuller"
			$LOCAL/scriptmakir
			chmod a+x $LOCAL/../gitpuller
		fi

		$LOCAL/../gitpuller

		$LOCAL/postupdate

		if ( ! find $LOCAL/../romeditor &> /dev/null ); then
			export AUTHOR="romeditor"
			$LOCAL/scriptmakir
			chmod a+x $LOCAL/../romeditor
		fi

		echo ""	
		echo "Team Gummy Update Complete!"
	else
		echo ""	
		echo "Team Gummy not initialized, aborting.. "
	fi
fi

if [ $version == "10" ]; then
	echo ""
	echo "Returning to Main Menu, Press Enter to continue"
	read done

	exit 0
fi

echo ""
echo "Press Enter to continue"
read done

$LOCAL/kitchenupdater
exit 0
