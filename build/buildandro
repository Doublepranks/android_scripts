#!/bin/bash
# Written by Sean Donovan (swordrune10)
#setup build
if [ "$OTHER_REPO" ]; then
	export REPO_FOLDER=$( echo "$OTHER_REPO_FOLDER" )
	export BUILD_FOLDER=$( echo "$BUILDS/$OTHER_REPO" )

else
	export REPO_FOLDER=$( echo "$REPOS/$SCRIPT_REPO-$REPO_PLATFORM" )
	export BUILD_FOLDER=$( echo "$BUILDS/$SCRIPT_REPO-$REPO_PLATFORM" )
fi

outfolder=$(echo "$REPO_FOLDER/out/target/product/$SCRIPT_DEVICE")

rm -f $outfolder/system/build.prop
rm -f $outfolder/*.zip*

cd $REPO_FOLDER

. build/envsetup.sh

if [ ! $SLOPPYSECONDS ]; then
	$LOCAL/config/romeditor

	if [ $AUTO ]; then
		make clobber
	else
		echo "clean out folder?"
		read -p "yes/no? " purgeout

		if [ "$purgeout" == "" ]; then
			echo ""
			echo "Did you just hit enter without a care? for that im just gonna clean the folder anyways.."

			make clobber
		fi

		if [ $purgeout == "yes" ] || [ $purgeout == "y" ]; then
			make clobber
		fi
	fi
fi

#build android
if [ $SCRIPT_REPO == "cm" ] || [ $SCRIPT_REPO == "pacman" ] || [ $SCRIPT_REPO == "paranoid" ]; then
	brunch $SCRIPT_DEVICE -j$THREADS_TOTAL
else
	if ( cat vendor/*/vendorsetup.sh | grep $SCRIPT_DEVICE &> /dev/null ); then
		lunch_device=$( cat $( find vendor/*/vendorsetup.sh | sed "/cm\/vendorsetup.sh/d" | head -n 1 ) \
		| grep $SCRIPT_DEVICE | sed 's/add_lunch_combo //' )
	fi

	if [ ! "$lunch_device" ] && ( find device/*/$SCRIPT_DEVICE/vendorsetup.sh &> /dev/null ); then
		lunch_device=$( cat device/*/$SCRIPT_DEVICE/vendorsetup.sh | grep $SCRIPT_DEVICE | sed 's/add_lunch_combo //' )
	fi

	if [ ! "$lunch_device" ]; then
			echo "Repository not supported!"
			read -p "Press Enter to continue: " done
			exit 0
	fi

	lunch $lunch_device
	make otapackage -j$THREADS_TOTAL
fi

#build aftermath
cd $REPO_FOLDER/out/target/product/$SCRIPT_DEVICE

zip=$(find *$SCRIPT_DEVICE*.zip)

if [ ! "$OTHER_REPO" ] && [ $SCRIPT_REPO == "aosp" ] || [ ! "$OTHER_REPO" ] && [ $SCRIPT_REPO == "raosp" ]; then

	echo "Making temporary folder for post-building $zip fixes"
	mkdir -p $BUILDS/temp/zipout
	cp $zip $BUILDS/temp
	cd $BUILDS/temp/zipout

	echo "Unzipping $zip"
	unzip ../$zip > /dev/null

	echo "Removing uneeded recovery folder and file_contexts from $zip"
	rm -r recovery
	rm file_contexts

	if [ $SCRIPT_REPO == "aosp" ]; then
		cd system
		echo "Adding rom manager items to $zip's build.prop"
		echo "ro.rommanager.developerid=$(whoami)" >> build.prop
		echo "ro.modversion=$(echo "aosp-$REPO_PLATFORM-$(date +%Y%m%d)-$SCRIPT_DEVICE")" >> build.prop

		cd ..
	fi

	cd META-INF/com/google/android
	sed -i "/install-recovery.sh.*/d" updater-script
	cd $BUILDS/temp/zipout
	

	echo "Zipping $zip back up"
	zip -r unsignedcrap.zip . > /dev/null

	echo "Signing $zip with test keys"
	java -Xmx1024m -classpath $LOCAL/testsign.jar testsign unsignedcrap.zip $zip
fi

if ( find $BUILD_FOLDER/*$SCRIPT_DEVICE.zip &> /dev/null); then
	mkdir -p $BUILD_FOLDER/old

	echo "Moving older build to $BUILD_FOLDER/old"

	mv $BUILD_FOLDER/*$SCRIPT_DEVICE.zip $BUILD_FOLDER/old
	mv $BUILD_FOLDER/*$SCRIPT_DEVICE.zip.md5sum $BUILD_FOLDER/old
fi

newzip=$(echo $SCRIPT_REPO-$REPO_PLATFORM-$(date +%Y%m%d)-SWORDKITCHEN-$SCRIPT_DEVICE.zip)

echo "Copying to $BUILD_FOLDER"
echo "$zip -> $newzip"
cp -T $zip $BUILD_FOLDER/$newzip

if [ ! "$OTHER_REPO_FOLDER" ] && [ $SCRIPT_REPO == "aosp" ] || [ $SCRIPT_REPO == "raosp" ]; then
	echo "Cleaning up temporary folder"
	cd $BUILDS
	rm -r temp
fi

cd $BUILD_FOLDER
md5sum $newzip
md5sum $newzip > $newzip.md5sum

echo "Finished!"
read -p "Press Enter to continue: " done
