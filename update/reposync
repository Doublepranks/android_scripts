#!/bin/bash
# Written by Sean Donovan (swordrune10)

if [ ! "$INIT" ]; then

usage="$(basename "$0") [-d] [-h] [-p] [-u] repo -- program to initialize/update android repos

where:
	-d  delete the appropriate folder and then exit program
	-h  show this help text
	-p  purge folder, reinit, and then update
	-u  update this particular repo

	    Options list:
	    kitchen = Update Kitchen
	    aokp = Update Android Open Kang Project
	    aosp = Update Android Open Source Project
	    bamf = Update BAMF Paradigm
	    bugless = Update Bugless Beast
	    cna = Update Codename Android
	    cm9 = Update Cyanogenmod 9
	    cm10 = Update Cyanogenmod 10
	    cm = Update Cyanogenmod 10.2
	    ev = Update Evervolv
	    paranoid = Update ParanoidAndroid
	    raosp = Update Rooted & Busyboxed AOSP
	    gummy = Update Team Gummy
	    all = Update all available repos
	    allthethings = Update all the repos

	    Example: reposync -u cm-10.2

	    typing \"reposync -u list\" will give
	    you the options list again"

while getopts ':dhpu:' option; do
	case "$option" in
		d) deletefolderandthatsit=true;;
		h) echo "$usage" && exit 0;;
		p) deletefolder=true;;
		u) platform=${OPTARG};;
        esac
done

fi

if [ "$parameter" ]; then
	export AUTO=true
fi

if [ ! "$INIT" ]; then
	cd $(dirname $0)
	export SCRIPT=$(echo "reposync")
	../headerfile
	exit 0
fi

menu () {

if [ ! "$AUTO" ]; then
	clear

	echo "Swordrune10's Android Kitchen!"
	echo "=============================="
	echo "What are we updating?"
	echo "If repo isn't initialized, it will be on update"
	echo "  1. Install the repo command"
	echo "  2. Setup the build enviroment"
	echo "  3. Update the Kitchen app repository"
	echo "  4. Update the Android Open Kang Project repository"
	echo "  5. Update the Android Open Source Project repository"
	echo "  6. Update the BAMF Paradigm repository"
	echo "  7. Update the Bugless Beast repository"
	echo "  8. Update the Codename Android repository"
	echo "  9. Update the Cyanogenmod 9 repository"
	echo "  10. Update the Cyanogenmod 10 repository"
	echo "  11. Update the Cyanogenmod 10.2 repository"
	echo "  12. Update the Evervolv repository"
	echo "  13. Update the ParanoidAndroid repository"
	echo "  14. Update the Rooted & Busyboxed AOSP repository"
	echo "  15. Update the Team Gummy repository"
	echo "  16. Update all available repositories"
	echo "  17. Update all the repos!"
	echo "  18. Go Back"
	read setupanswer

	if [ ! "$setupanswer" ] || ( echo $setupanswer | grep -q [A-Za-z] ) || [ $setupanswer -gt "18" ]; then
		echo ""
		echo "You did not make a proper selection, try again!"
		read -p "Press Enter to continue: " done
		menu
	fi
fi

if [ "$parameter" ]; then
	if [ $parameter == "list" ]; then
		echo "kitchen = Update Kitchen"
		echo "aokp = Update Android Open Kang Project"
		echo "aosp = Update Android Open Source Project"
		echo "bamf = Update BAMF Paradigm"
		echo "bugless = Update Bugless Beast"
		echo "cna = Update Codename Android"
		echo "cm9 = Update Cyanogenmod 9"
		echo "cm10 = Update Cyanogenmod 10"
		echo "cm = Update Cyanogenmod 10.2"
		echo "ev = Update Evervolv"
		echo "paranoid = Update ParanoidAndroid"
		echo "raosp = Update Rooted & Busyboxed AOSP"
		echo "gummy = Update Team Gummy"
		echo "all = Update all available repos"
		echo "allthethings = Update all the repos"
		exit 0
	fi

	if [ $parameter == "kitchen" ]; then
		setupanswer="3"
	fi

	if [ $parameter == "aokp" ]; then
		setupanswer="4"
	fi

	if [ $parameter == "aosp" ]; then
		setupanswer="5"
	fi

	if [ $parameter == "bamf" ]; then
		setupanswer="6"
	fi

	if [ $parameter == "bugless" ]; then
		setupanswer="7"
	fi

	if [ $parameter == "cna" ]; then
		setupanswer="8"
	fi

	if [ $parameter == "cm9" ]; then
		setupanswer="9"
	fi

	if [ $parameter == "cm10" ]; then
		setupanswer="10"
	fi

	if [ $parameter == "cm" ]; then
		setupanswer="11"
	fi

	if [ $parameter == "ev" ] || [ $parameter == "evervolv" ]; then
		setupanswer="12"
	fi

	if [ $parameter == "paranoid" ]; then
		setupanswer="13"
	fi

	if [ $parameter == "raosp" ]; then
		setupanswer="14"
	fi

	if [ $parameter == "gummy" ]; then
		setupanswer="15"
	fi

	if [ $parameter == "all" ]; then
		setupanswer="16"
	fi
	if [ $parameter == "allthethings" ]; then
		setupanswer="17"
	fi
fi

setupcheck() {
if [ $SCRIPT_REPO == "kitchen" ]; then
	export REPO_FOLDER=$( echo "$LOCAL/.." )
else
	export REPO_FOLDER=$( echo "$REPOS/$SCRIPT_REPO-$REPO_PLATFORM" )
	
	if [ "$deletefolder" ]; then
		rm -rf $REPO_FOLDER
	elif [ "$deletefolderandthatsit" ]; then
		rm -rf $REPO_FOLDER
		exit 0
	fi
fi

if ( ! find $REPO_FOLDER/.repo -maxdepth 1 &> /dev/null); then
	setupcode
fi
	synccode

if [ "$done" ]; then
	echo ""
	echo "$repo_name Update Complete!"

	if [ ! "$AUTO" ]; then
		echo ""
		echo "Finished!"
		read -p "Press Enter to continue: " done
		menu
	else
		exit 0
	fi
fi
}

setupcode() {
echo ""
if [ ! "$AUTO" ]; then
	if [ ! $setupanswer == "16" ]; then
		echo "$repo_name not initialized, do you want to initialize it?"
		read init

		if [ "$init" == "yes" ] || [ "$init" == "y" ]; then
			echo "initializing $repo_name.."
		else
			echo "$repo_name wasn't initialized.. "
		fi
	else
		echo "$repo_name not initialized, skipping.."
	fi
else
	echo "$repo_name not initialized, initializing now.."
fi

if [ "$AUTO" ] && [ $setupanswer == "17" ] || [ "$init" == "yes" ] || [ "$init" == "y" ]; then
	if [ ! $SCRIPT_REPO == "kitchen" ]; then
		mkdir -p $REPO_FOLDER
	fi

	cd $REPO_FOLDER

	repo init -u $repo_url -b $repo_branch
fi
}

synccode() {
if ( find $REPO_FOLDER/.repo -maxdepth 1 &> /dev/null); then
	supersync=$( expr $THREADS_TOTAL \* 2 )

	echo ""
	echo "Updating $repo_name repository.."

	cd $REPO_FOLDER

	preupdate
	repo sync -j$supersync

	$LOCAL/config/gitpuller

	postupdate
fi
}

if [ $setupanswer == "1" ]; then
	if ( type -a repo &> /dev/null ); then
		echo ""
		echo "repo is already installed.."
	else
		echo ""
		echo "Installing the repo command.."

		if ( ! find ~/bin &> /dev/null ); then
			mkdir ~/bin
		fi

		wget https://dl-ssl.google.com/dl/googlesource/git-repo/repo -O ~/bin/repo
		chmod a+x ~/bin/repo

		echo ""
		echo "Finished!"
		read -p "Press Enter to continue: " done
	fi
fi

if [ $setupanswer == "2" ]; then
	environmentsetup
fi

if [ $setupanswer == "3" ]; then
	export REPOLIST="kitchen"
	repolist
	done=true
	setupcheck
fi

if [ $setupanswer == "4" ]; then
	export REPOLIST="aokp"
	repolist
	done=true
	setupcheck
fi

if [ $setupanswer == "5" ]; then
	export REPOLIST="aosp"
	repolist
	done=true
	setupcheck
fi

if [ $setupanswer == "6" ]; then
	export REPOLIST="bamf"
	repolist
	done=true
	setupcheck
fi

if [ $setupanswer == "7" ]; then
	export REPOLIST="bugless"
	repolist
	done=true
	setupcheck
fi

if [ $setupanswer == "8" ]; then
	export REPOLIST="cna"
	repolist
	done=true
	setupcheck
fi

if [ $setupanswer == "9" ]; then
	export REPOLIST="cm9"
	repolist
	done=true
	setupcheck
fi

if [ $setupanswer == "10" ]; then
	export REPOLIST="cm10"
	repolist
	done=true
	setupcheck
fi

if [ $setupanswer == "11" ]; then
	export REPOLIST="cm"
	repolist
	done=true
	setupcheck
fi

if [ $setupanswer == "12" ]; then
	export REPOLIST="ev"
	repolist
	done=true
	setupcheck
fi

if [ $setupanswer == "13" ]; then
	export REPOLIST="paranoid"
	repolist
	done=true
	setupcheck
fi

if [ $setupanswer == "14" ]; then
	export REPOLIST="raosp"
	repolist
	done=true
	setupcheck
fi

if [ $setupanswer == "15" ]; then
	export REPOLIST="gummy"
	repolist
	done=true
	setupcheck
fi

if [ $setupanswer == "16" ] || [ $setupanswer == "17" ]; then
	export REPOLIST="kitchen"
	repolist
	setupcheck

	export REPOLIST="aosp"
	repolist
	setupcheck

	export REPOLIST="bamf"
	repolist
	setupcheck

	export REPOLIST="bugless"
	repolist
	setupcheck

	export REPOLIST="cna"
	repolist
	setupcheck

	export REPOLIST="cm9"
	repolist
	setupcheck

	export REPOLIST="cm10"
	repolist
	setupcheck

	export REPOLIST="cm"
	repolist
	setupcheck

	export REPOLIST="ev"
	repolist
	setupcheck

	export REPOLIST="paranoid"
	repolist
	setupcheck

	export REPOLIST="raosp"
	repolist
	setupcheck
	export REPOLIST="gummy"
	repolist
	done=true
	setupcheck
fi

if [ $setupanswer == "18" ]; then
	echo ""
	read -p "Returning to Main Menu, Press Enter to continue: " done
	exit 0
fi

if [ $AUTO ]; then
	exit 0
fi

menu
}
menu
