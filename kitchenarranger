#!/bin/bash
# Written by Sean Donovan (swordrune10)
clear

export REPOS=$(echo "$LOCAL/../../repos")
echo "Swordrune10's Android Kitchen!"
echo "=============================="
echo "What are we setting up?"
echo "  1. Install the repo command"
echo "  2. Initilize the build enviroment"
echo "  3. Initilize the Kitchen app repository"
echo "  4. Initilize the Cyanogenmod 9 repository"
echo "  5. Initilize the Rooted & Busyboxed AOSP repository"
echo "  6. Initilize the Android Open Source Project repository"
echo "  7. Go Back"
echo ""
echo "Which one would you like to do?"
read setupanswer

if [ $setupanswer == "1" ]; then
	echo "Installing the repo command.."

	mkdir -p ~/bin
	curl https://dl-ssl.google.com/dl/googlesource/git-repo/repo > ~/bin/repo
	chmod a+x ~/bin/repo

	echo ""
	echo "Finished!"
fi

if [ $setupanswer == "2" ]; then
	# borrowed "uname -a | grep Darwin" cyanogenmod's opticharger
	echo "Initilizing the build enviroment.."

	if ( uname -a | grep Linux ); then
		if ( find /etc/fedora-release &> /dev/null )
			echo "Installing packages needed, please enter your password"
			sudo yum install gcc gcc-c++ gperf flex bison glibc-devel.{x86_64,i686} \
			zlib-devel.{x86_64,i686} ncurses-devel.i686 libsx-devel readline-devel.i386 \
			glibc.i686 glibc-devel.i686 libstdc++.i686 zlib-devel.i686 libX11-devel.i686 \
			libXrender.i686 libXrandr.i686


			echo "Installing java will take a while, to do this legally the Kitchen app will use exerpts from flexion.org oab-java6 script"
			read done
			# Exerpts from the much smarter (as u can see from the code) flexion.org oab-java6 script
			# slightly edited to remove unneeded code and grab the rpm version

			# Cet the current Debian package version
			DEB_VERSION=`head -n1 changelog | cut -d'(' -f2 | cut -d')' -f1 | cut -d'~' -f1`

			# Determine the currently supported Java version and update
			JAVA_VER=`echo ${DEB_VERSION} | cut -d'.' -f1`
			JAVA_UPD=`echo ${DEB_VERSION} | cut -d'.' -f2 | cut -d'-' -f1`

			# Try and dynamic find the JDK downloads
			echo " [x] Getting Java SE download page"
			wget "http://www.oracle.com/technetwork/java/javase/downloads/index.html" -O /tmp/oab-index.html

			# See if the Java version is on the download frontpage, otherwise look for it in
			# the previous releases page.
			DOWNLOAD_INDEX=`grep -P -o "/technetwork/java/javase/downloads/jdk-${JAVA_VER}u${JAVA_UPD}-downloads-\d+\.html" /tmp/oab-index.html | uniq`

			if [ -n "${DOWNLOAD_INDEX}" ]; then
				echo " [x] Getting current release download page "
				wget http://www.oracle.com/${DOWNLOAD_INDEX} -O /tmp/oab-download.html
			else
				echo " [x] Getting previous releases download page "
				wget http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-javase6-419409.html -O /tmp/oab-download.html
			fi

wget https://github.com/rraptorr/sun-java6/raw/master/debian/changelog -O $LOCAL/../changelog.tmp

			for JAVA_BIN in jdk-${JAVA_VER}u${JAVA_UPD}-linux-x64-rpm.bin
			do
				# Get the download URL and size
				DOWNLOAD_URL=`grep ${JAVA_BIN} /tmp/oab-download.html | cut -d'{' -f2 | cut -d',' -f3 | cut -d'"' -f4`
				DOWNLOAD_SIZE=`grep ${JAVA_BIN} /tmp/oab-download.html | cut -d'{' -f2 | cut -d',' -f2 | cut -d':' -f2 | sed 's/"//g'`    
				# Cookies required for download
				COOKIES="oraclelicensejdk-${JAVA_VER}u${JAVA_UPD}-oth-JPR=accept-securebackup-cookie;gpw_e24=http://edelivery.oracle.com"
    
				echo " [x] Downloading ${JAVA_BIN} : ${DOWNLOAD_SIZE} "
				wget --no-check-certificate --header="Cookie: ${COOKIES}" -c "${DOWNLOAD_URL}" -O ${JAVA_BIN}
  
			done
			chmod +x $LOCAL/../${JAVA_BIN}
			cd $LOCAL/..
			sudo $LOCAL/../${JAVA_BIN}
			sudo rm -f *.rpm
			rm -f $LOCAL/../changelog.tmp

			echo ""
			echo "Finished!"
			echo ""
			echo "Press Enter to continue"
			read done

			$LOCAL/kitchenarranger
			exit 0		
		fi
		if ( lsb_release -a | grep buntu ); then
	
			# ubuntu 10.04, 10.10, and 11.04
			if ( lsb_release -a | grep natty ) || ( lsb_release -a | grep lucid ) || ( lsb_release -a | grep maverick ); then
				echo "Installing packages needed, please enter your password"
				sudo apt-get install git-core gnupg flex bison gperf build-essential \
				zip curl zlib1g-dev libc6-dev lib32ncurses5-dev ia32-libs \
				x11proto-core-dev libx11-dev lib32readline5-dev lib32z-dev \
				libgl1-mesa-dev g++-multilib mingw32 tofrodos python-markdown \
				libxml2-utils xsltproc

				sudo ln -s /usr/lib32/mesa/libGL.so.1 /usr/lib32/mesa/libGL.so
			fi
	
			# ubuntu 11.10
			if ( lsb_release -a | grep oneiric ); then
				echo "Installing packages needed, please enter your password"
				sudo apt-get install git-core gnupg flex bison gperf build-essential \
				zip curl zlib1g-dev libc6-dev lib32ncurses5-dev ia32-libs \
				x11proto-core-dev libx11-dev lib32readline5-dev lib32z-dev \
				libgl1-mesa-dev g++-multilib mingw32 tofrodos python-markdown \
				libxml2-utils xsltproc libx11-dev:i386

				sudo ln -s /usr/lib/i386-linux-gnu/libX11.so.6 /usr/lib/i386-linux-gnu/libX11.so
			fi		
		
			# ubuntu 12.04
			if ( lsb_release -a | grep precise ); then
				echo "Installing packages needed, please enter your password"
				sudo apt-get install git-core gnupg flex bison gperf build-essential \
  				zip curl libc6-dev libncurses5-dev:i386 x11proto-core-dev \
  				libx11-dev:i386 libreadline6-dev:i386 libgl1-mesa-dev:i386 \
 				g++-multilib mingw32 tofrodos python-markdown \
  				libxml2-utils xsltproc zlib1g-dev:i386 \
				# threw these in to make sure it builds ;)				
				gcc-4.4 gcc-4.5 g++-4.4-multilib g++-4.5-multilib
			fi
		fi

		if ( lsb_release -a | grep Debian ); then
			echo "Installing packages needed, please enter your password"
			sudo apt-get install git-core gnupg flex bison gperf build-essential \
			zip curl zlib1g-dev libc6-dev lib32ncurses5-dev ia32-libs \
			x11proto-core-dev libx11-dev lib32readline5-dev lib32z-dev \
			libgl1-mesa-dev g++-multilib mingw32 tofrodos python-markdown \
			libxml2-utils xsltproc

			sudo ln -s /usr/lib32/mesa/libGL.so.1 /usr/lib32/mesa/libGL.so
		fi

		echo "Installing java will take a while, to do this legally the Kitchen app will use flexion.org oab-java6 script"
		read done
		wget https://raw.github.com/flexiondotorg/oab-java6/master/oab-java6.sh -O $LOCAL/../oab-java6.sh
		chmod +x $LOCAL/../oab-java6.sh
		echo "Switching to oab-java6 script, Press Enter to continue"
		read done
		sudo $LOCAL/../oab-java6.sh
		rm -f $LOCAL/../oab-java6.sh
		rm -f $LOCAL/../oab-java6.sh.log
		sudo apt-get install sun-java6-jre sun-java6-jdk

		echo ""
		echo "Finished!"
	fi
	
	if ( uname -a | grep Darwin ); then
		echo "Please visit the following website, because setting up for mac os is a pain in the butt!"
		echo ""
		echo "http://source.android.com/source/initializing.html#setting-up-a-mac-os-x-build-environment"
		echo "Exiting now.."
		export EXIT=true
		read done
		exit 0
	fi

fi

if [ $setupanswer == "3" ]; then
	echo "Initilizing the Kitchen app repository.."

	cd $LOCAL/..
	repo init -u http://github.com/swordrune10/android_manifest.git -b master

	echo ""	
	echo "Sync the Kitchen app repository?"
	read kitchensync

	if [ $kitchensync == "yes" ] || [ $kitchensync == "y" ]; then
		repo sync
	fi

	echo ""
	echo "Finished!"
	read done
fi

if [ $setupanswer == "4" ]; then
	echo "Initilizing the Cyanogenmod 9 repository.."

	mkdir -p $REPOS/cm-ics
	cd $REPOS/cm-ics
	repo init -u http://github.com/CyanogenMod/android.git -b ics

	echo ""
	echo "Sync the Cyanogenmod 9 repository?"
	read cm9sync

	if [ $cm9sync == "yes" ] || [ $cm9sync == "y" ]; then
		repo sync
	fi

	echo ""
	echo "Finished!"
fi

if [ $setupanswer == "5" ]; then
	echo "Initilizing the Rooted & Busyboxed AOSP repository.."

	mkdir -p $REPOS/rooted-aosp-ics
	cd $REPOS/rooted-aosp-ics
	repo init -u http://github.com/swordrune10/android_manifest.git -b ics

	echo ""
	echo "Sync the Rooted & Busyboxed AOSP repository?"
	read raospsync

	if [ $raospsync == "yes" ] || [ $raospsync == "y" ]; then
		repo sync
	fi

	echo ""
	echo "Finished!"
fi

if [ $setupanswer == "6" ]; then
	echo "Initilizing the Android Open Source Project repository.."

	mkdir -p $REPOS/aosp-ics
	cd $REPOS/aosp-ics
	repo init -u https://android.googlesource.com/platform/manifest -b android-4.0.4_r1.2

	echo ""
	echo "Sync the Android Open Source Project repository?"
	read aospsync

	if [ $aospsync == "yes" ] || [ $aospsync == "y" ]; then
		repo sync
	fi

	echo ""
	echo "Finished!"
fi

if [ $setupanswer == "7" ]; then
	echo ""
	echo "Returning to Main Menu, Press Enter to continue"
	read done

	exit 0
fi

echo ""
echo "Press Enter to continue"
read done

$LOCAL/kitchenarranger
exit 0
