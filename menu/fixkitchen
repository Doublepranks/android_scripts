#!/bin/bash
# Written by Sean Donovan (swordrune10)

if [ ! "$INIT" ]; then
	cd $(dirname $0)
	export SCRIPT=$(echo "fixkitchen")
	../headerfile
	exit 0
fi

menu () {
clear

if ( find $LOCAL/../redeemer &> /dev/null ); then
	rm -f $LOCAL/../redeemer
fi

echo "Swordrune10's Android Kitchen!"
echo "=============================="
echo "Something is not working right? What should we do?"
echo "Purge = remove files, download from origin"
echo "Delete = delete it!"
echo "  1. Add a repo to a certain local_manifest.xml file"
echo "  2. Purge a certain local_manifest.xml source file"
echo "  3. Purge all local_manifest.xml source files"
echo "  4. Purge/Delete a certain repository"
echo "  5. Purge/Delete all the repositories"
echo "  6. Purge/Delete the Kitchen app"
echo "  7. Delete the Kitchen app, and its dependencies"
echo "  8. Delete entire computer"
echo "  9. Go Back"
echo ""
echo "Which one would you like to do?"
read cleananswer

if [ ! "$cleananswer" ]; then
	echo ""
	echo "You did not make a proper selection, try again!"
	read -p "Press Enter to continue: " done
fi

if ( echo $cleananswer | grep -q [A-Za-z] ); then
	echo ""
	echo "You did not make a proper selection, try again!"
	read -p "Press Enter to continue: " done
fi

if [ $cleananswer -gt "9" ]; then
	echo ""
	echo "You did not make a proper selection, try again!"
	read -p "Press Enter to continue: " done
fi

if [ $cleananswer == "1" ]; then
	clear

	echo "which repo would you like to modify?"
	echo "Android Open Source Project = aosp"
	echo "Cyanogenmod 9 = cm9"
	echo "Cyanogenmod 10 = cm10"
	echo "Rooted & Busyboxed AOSP = raosp"
	echo "type exit to go to back"
	read addrepo

	if [ "$addrepo" == "" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	fi


	if [ $addrepo == "exit" ]; then
		echo ""
		read -p "Press Enter to continue: " done
		menu
	fi

	if [ $addrepo == "cm9" ]; then
		if ( ! find $LOCAL/xml/cm-local_manifest.xml &> /dev/null ); then
			echo ""
			echo "local_manifest.xml for Cyanogenmod 9 doesn't exist!"
			read -p "Press Enter to continue: " done
			menu
		fi

		mkdir -p $LOCAL/../temp

echo "  <project name=\"GITHUB ACCOUNT/PROJECT\" \
path=\"PATH INSIDE REPO\" \
remote=\"github\" \
revision=\"PROJECT BRANCH\" />" > $LOCAL/../temp/addrepo

		nano $LOCAL/../temp/addrepo

		echo ""
		echo "Adding repo to local_manifest.xml for Cyanogenmod 9.."
		cd $LOCAL/xml
		sed -i "/<\/manifest>/d" cm-local_manifest.xml
		cat $LOCAL/../temp/addrepo  >> cm-local_manifest.xml
		echo "</manifest>" >> cm-local_manifest.xml
		preupdate
		rm -r $LOCAL/../temp
	fi

	if [ $addrepo == "cm10" ]; then
		if ( ! find $LOCAL/xml/cm10-local_manifest.xml &> /dev/null ); then
			echo ""
			echo "local_manifest.xml for Cyanogenmod 10 doesn't exist!"
			read -p "Press Enter to continue: " done
			menu
		fi

		mkdir -p $LOCAL/../temp

echo "  <project name=\"GITHUB ACCOUNT/PROJECT\" \
path=\"PATH INSIDE REPO\" \
remote=\"github\" \
revision=\"PROJECT BRANCH\" />" > $LOCAL/../temp/addrepo

		nano $LOCAL/../temp/addrepo

		echo ""
		echo "Adding repo to local_manifest.xml for Cyanogenmod 10.."
		cd $LOCAL/xml
		sed -i "/<\/manifest>/d" cm10-local_manifest.xml
		cat $LOCAL/../temp/addrepo  >> cm10-local_manifest.xml
		echo "</manifest>" >> cm10-local_manifest.xml
		preupdate
		rm -r $LOCAL/../temp
	fi

	if [ $addrepo == "raosp" ]; then
		if ( ! find $LOCAL/xml/raosp-jb-local_manifest.xml &> /dev/null ); then
			echo ""
			echo "local_manifest.xml for Rooted & Busyboxed AOSP doesn't exist!"
			read -p "Press Enter to continue: " done
			menu
		fi

		mkdir -p $LOCAL/../temp

echo "  <project name=\"GITHUB ACCOUNT/PROJECT\" \
path=\"PATH INSIDE REPO\" \
remote=\"github\" \
revision=\"PROJECT BRANCH\" />" > $LOCAL/../temp/addrepo

		nano $LOCAL/../temp/addrepo

		echo ""
		echo "Adding repo to local_manifest.xml for Rooted & Busyboxed AOSP.."
		cd $LOCAL/xml
		sed -i "/<\/manifest>/d" raosp-jb-local_manifest.xml
		cat $LOCAL/../temp/addrepo  >> raosp-jb-local_manifest.xml
		echo "</manifest>" >> raosp-jb-local_manifest.xml
		preupdate
		rm -r $LOCAL/../temp
	fi

	if [ $addrepo == "aosp" ]; then
		if ( ! find $LOCAL/xml/aosp-jb-local_manifest.xml &> /dev/null ); then
			echo ""
			echo "local_manifest.xml for Android Open Source Project doesn't exist!"
			read -p "Press Enter to continue: " done
			menu
		fi

		mkdir -p $LOCAL/../temp

echo "  <project name=\"GITHUB ACCOUNT/PROJECT\" \
path=\"PATH INSIDE REPO\" \
remote=\"github\" \
revision=\"PROJECT BRANCH\" />" > $LOCAL/../temp/addrepo

		nano $LOCAL/../temp/addrepo

		echo ""
		echo "Adding repo to local_manifest.xml for Android Open Source Project.."
		cd $LOCAL/xml
		sed -i "/<\/manifest>/d" aosp-jb-local_manifest.xml
		cat $LOCAL/../temp/addrepo  >> aosp-jb-local_manifest.xml
		echo "</manifest>" >> aosp-jb-local_manifest.xml
		preupdate
		rm -r $LOCAL/../temp
	fi

	echo ""
	echo "Finished!"
	read -p "Press Enter to continue: " done
fi

if [ $cleananswer == "2" ]; then
	clear

	echo "which repo would you like to modify?"
	echo "Android Open Source Project = aosp"
	echo "Cyanogenmod 9 = cm9"
	echo "Cyanogenmod 9 = cm10"
	echo "Rooted & Busyboxed AOSP = raosp"
	echo "type exit to go to back"
	read cleanse

	if [ ! "$cleanse" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	fi


	if [ $cleanse == "exit" ]; then
		echo ""
		read -p "Press Enter to continue: " done
		menu
	fi

	if [ $cleanse == "cm9" ]; then
		if ( find $LOCAL/xml/cm-local_manifest.xml &> /dev/null ); then
			echo ""
			echo "Purging local_manifest.xml source file for Cyanogenmod 9.."
			rm -f $LOCAL/xml/cm-local_manifest.xml
			export SCRIPT_REPO=$(echo "cm")
			export REPO_PLATFORM=$(echo "ics")
			export AUTHOR="xml"
			scriptmakir
		else
			echo ""
			export SCRIPT_REPO=$(echo "cm")
			export REPO_PLATFORM=$(echo "ics")
			echo "Purging local_manifest.xml source file for Cyanogenmod 9.."
			export AUTHOR="xml"
			scriptmakir
		fi
	fi

	if [ $cleanse == "cm10" ]; then
		if ( find $LOCAL/xml/cm10-local_manifest.xml &> /dev/null ); then
			echo ""
			echo "Purging local_manifest.xml source file for Cyanogenmod 10.."
			rm -f $LOCAL/xml/cm10-local_manifest.xml
			export SCRIPT_REPO=$(echo "cm")
			export REPO_PLATFORM=$(echo "jb")
			export AUTHOR="xml"
			scriptmakir
		else
			echo ""
			export SCRIPT_REPO=$(echo "cm")
			export REPO_PLATFORM=$(echo "jb")
			echo "Purging local_manifest.xml source file for Cyanogenmod 10.."
			export AUTHOR="xml"
			scriptmakir
		fi
	fi

	if [ $cleanse == "raosp" ]; then
		if ( find $LOCAL/xml/raosp-jb-local_manifest.xml &> /dev/null ); then
			echo ""
			echo "Purging local_manifest.xml source file for Rooted & Busyboxed AOSP.."
			rm -f $LOCAL/xml/raosp-jb-local_manifest.xml
			export SCRIPT_REPO=$(echo "raosp")
			export AUTHOR="xml"
			scriptmakir
		else
			echo ""
			echo "Purging local_manifest.xml source file for Rooted & Busyboxed AOSP.."
			export SCRIPT_REPO=$(echo "raosp")
			export AUTHOR="xml"
			scriptmakir
		fi
	fi

	if [ $cleanse == "aosp" ]; then
		if ( find $LOCAL/xml/aosp-jb-local_manifest.xml &> /dev/null ); then
			echo ""
			echo "Purging local_manifest.xml source file for Android Open Source Project.."
			rm -f $LOCAL/xml/aosp-jb-local_manifest.xml
			export SCRIPT_REPO=$(echo "aosp")
			export AUTHOR="xml"
			scriptmakir
		else
			echo ""
			echo "Purging local_manifest.xml source file for Android Open Source Project.."
			export SCRIPT_REPO=$(echo "aosp")
			export AUTHOR="xml"
			scriptmakir
		fi
	fi

	echo ""
	echo "Finished!"
	read -p "Press Enter to continue: " done
fi

if [ $cleananswer == "3" ]; then
	echo ""
	echo "Purging all local_manifest.xml source files.."

	if ( find $LOCAL/xml &> /dev/null ); then
		rm -rf $LOCAL/xml
	fi

	export SCRIPT_REPO=$(echo "cm")
	export REPO_PLATFORM=$(echo "ics")
	export AUTHOR="xml"
	scriptmakir

	export SCRIPT_REPO=$(echo "cm")
	export REPO_PLATFORM=$(echo "jb")
	export AUTHOR="xml"
	scriptmakir

	export SCRIPT_REPO=$(echo "raosp")
	export AUTHOR="xml"
	scriptmakir

	export SCRIPT_REPO=$(echo "aosp")
	export AUTHOR="xml"
	scriptmakir

	echo ""
	echo "Finished!"
	read -p "Press Enter to continue: " done
fi

if [ $cleananswer == "4" ]; then
	clear

	echo ""
	echo "which repo would you like to modify?"
	echo "Android Open Kang Project = aokp-jb"
	echo "Android Open Source Project = aosp-jb"
	echo "Cyanogenmod 9 = cm-ics"
	echo "Cyanogenmod 10 = cm-jb"
	echo "Evervolv = evervolv-jb"
	echo "Rooted & Busyboxed AOSP = raosp-jb"
	echo "Team Gummy = gummy-jb"
	echo "type exit to go to back"
	read modify

	if [ ! "$modify" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	fi

	if [ $modify == "exit" ]; then
		echo ""
		read -p "Press Enter to continue: " done
		menu
	fi

	echo ""
	echo "Purge or Delete?"
	echo "Purge = remove files, download from origin"
	echo "Delete = delete it!"
	echo "type exit to go to back"
	read remover

	if [ ! "$remover" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	fi

	if [ $remover == "exit" ]; then
		echo ""
		read -p "Press Enter to continue: " done
		menu
	fi

	cd $REPOS/$modify

	if [ $remover == "Purge" ] || [ $remover == "purge" ]; then
		rm -rf *
		repo sync
	fi

	if [ $remover == "Delete" ] || [ $remover == "delete" ]; then
		cd ..
		rm -rf $modify
	fi

	echo ""
	echo "Finished!"
	read -p "Press Enter to continue: " done
fi

if [ $cleananswer == "5" ]; then
	clear

	echo ""
	echo "Purge or Delete the repositories?"
	echo "Purge = remove files, download from origin"
	echo "Delete = delete it!"
	echo "type exit to go to back"
	read remover

	if [ ! "$remover" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	fi

	if [ $remover == "exit" ]; then
		echo ""
		read -p "Press Enter to continue: " done
		menu
	fi

	if ( find $REPOS/aokp-jb &> /dev/null ); then
		cd $REPOS/aokp-jb

		if [ $remover == "Purge" ] || [ $remover == "purge" ]; then
			rm -rf *
			repo sync
		fi

		if [ $remover == "Delete" ] || [ $remover == "delete" ]; then
			cd ..
			rm -rf aokp-jb
		fi
	fi

	if ( find $REPOS/aosp-jb &> /dev/null ); then
		cd $REPOS/aosp-jb

		if [ $remover == "Purge" ] || [ $remover == "purge" ]; then
			rm -rf *
			repo sync
		fi

		if [ $remover == "Delete" ] || [ $remover == "delete" ]; then
			cd ..
			rm -rf aosp-jb
		fi
	fi

	if ( find $REPOS/cm-ics &> /dev/null ); then
		cd $REPOS/cm-ics

		if [ $remover == "Purge" ] || [ $remover == "purge" ]; then
			rm -rf *
			repo sync
		fi

		if [ $remover == "Delete" ] || [ $remover == "delete" ]; then
			cd ..
			rm -rf cm-ics
		fi
	fi

	if ( find $REPOS/cm-jb &> /dev/null ); then
		cd $REPOS/cm-jb

		if [ $remover == "Purge" ] || [ $remover == "purge" ]; then
			rm -rf *
			repo sync
		fi

		if [ $remover == "Delete" ] || [ $remover == "delete" ]; then
			cd ..
			rm -rf cm-jb
		fi
	fi

	if ( find $REPOS/evervolv-jb &> /dev/null ); then
		cd $REPOS/evervolv-jb

		if [ $remover == "Purge" ] || [ $remover == "purge" ]; then
			rm -rf *
			repo sync
		fi

		if [ $remover == "Delete" ] || [ $remover == "delete" ]; then
			cd ..
			rm -rf evervolv-jb
		fi
	fi

	if ( find $REPOS/raosp-jb &> /dev/null ); then
		cd $REPOS/raosp-jb

		if [ $remover == "Purge" ] || [ $remover == "purge" ]; then
			rm -rf *
			repo sync
		fi

		if [ $remover == "Delete" ] || [ $remover == "delete" ]; then
			cd ..
			rm -rf raosp-jb
		fi
	fi

	if ( find $REPOS/sts-jb &> /dev/null ); then
		cd $REPOS/sts-jb

		if [ $remover == "Purge" ] || [ $remover == "purge" ]; then
			rm -rf *
			repo sync
		fi

		if [ $remover == "Delete" ] || [ $remover == "delete" ]; then
			cd ..
			rm -rf sts-jb
		fi
	fi

	if ( find $REPOS/gummy-jb &> /dev/null ); then
		cd $REPOS/gummy-jb

		if [ $remover == "Purge" ] || [ $remover == "purge" ]; then
			rm -rf *
			repo sync
		fi

		if [ $remover == "Delete" ] || [ $remover == "delete" ]; then
			cd ..
			rm -rf gummy-jb
		fi
	fi

	echo ""
	echo "Finished!"
	read -p "Press Enter to continue: " done
fi

if [ $cleananswer == "6" ]; then
	clear

	echo ""
	echo "Purge or Delete?"
	echo "Purge = remove files, download from origin"
	echo "Delete = delete it!"
	echo "type exit to go back"
	read remover

	if [ ! "$remover" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	fi

	if [ $remover == "exit" ]; then
		echo ""
		read -p "Press Enter to continue: " done
		menu
	fi

	cd $LOCAL/..

	if [ $remover == "Purge" ] || [ $remover == "purge" ]; then
		export AUTHOR="redeemer"
		scriptmakir

		echo ""
		echo "Switching to Redeemer script.."
		echo ""
		./redeemer
		echo ""
		echo "Finished!"
		read -p "Press Enter to continue: " done
	fi

	if [ $remover == "Delete" ] || [ $remover == "delete" ]; then
		echo ""
		echo "Are you sure you want to remove the Kitchen app?"
		echo "You must type in \"yes\" to continue"
		echo ""
		echo "Type in anything else to abort operation"
		read -p "yes/no? " destroyer

		if [ ! "$destroyer" ]; then
			echo ""
			echo "You didn't type in anything.."
			read -p "Press Enter to continue: " done
			menu
		fi

		if [ ! $destroyer == "yes" ]; then
			echo ""
			echo "Aborting.."
			read -p "Press Enter to continue: " done
		fi

		if [ $destroyer == "yes" ]; then
			export AUTHOR="destroyer"
			scriptmakir

			echo ""
			echo "Thank you for using Swordrune10's Kitchen!"
			echo "Switching to Destroyer script.."
			echo ""
			./destroyer
			exit 0
		fi
	fi
fi

if [ $cleananswer == "7" ]; then
	clear

	echo ""
	echo "Are you sure you want to remove the Kitchen app and its dependencies?"
	echo "Please note: the builds directory will not be deleted?"
	echo "You must type in \"yes\" to continue"
	echo ""
	echo "Type in anything else to abort operation"
	read -p "yes/no? " destroyerofworlds

	if [ ! "$destroyerofworlds" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	fi

	if [ ! $destroyerofworlds == "yes" ]; then
		echo ""
		echo "Aborting.."
		read -p "Press Enter to continue: " done
	fi

	if [ $destroyerofworlds == "yes" ]; then
		export AUTHOR="destroyerofworlds"
		scriptmakir

		echo ""
		echo "Thank you for using Swordrune10's Kitchen!"
		echo "Switching to Destroyer of Worlds script.."
		echo ""
		cd $LOCAL/..
		./destroyerofworlds
		exit 0
	fi
fi

if [ $cleananswer == "8" ]; then
	clear

	echo ""
	echo "Are you sure..? this will delete everything on your computer, including external drives and flash drives!!"
	echo "You must type in \"yes, please delete everything off my computer\" to continue"
	echo ""
	echo "Type in anything else to bail out"
	read -p "yes/no? " suicidenote

	if [ ! "$suicidenote" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	fi

	if [ ! $suicidenote == "yes, please delete everything off my computer" ]; then
		echo ""
		echo "Please dont try that again..."
	fi

	if [ $suicidenote == "yes, please delete everything off my computer" ]; then
		echo ""
		echo "Please type in your password to destroy everything"
		sudo rm -rf /
	fi

	echo ""
	echo "Finished!"
	read -p "Press Enter to continue: " done
fi

if [ $cleananswer == "9" ]; then
	echo ""
	read -p "Returning to Main Menu, Press Enter to continue: " done
	exit 0
fi

menu
}
menu
