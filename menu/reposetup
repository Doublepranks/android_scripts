#!/bin/bash
# Written by Sean Donovan (swordrune10)

if [ ! "$INIT" ]; then
	export parameter=$(echo "$1")
fi

if [ "$parameter" ]; then
	export AUTO=true
fi

if [ ! "$INIT" ]; then
	cd $(dirname $0)
	export SCRIPT=$(echo "reposetup")
	../headerfile
	exit 0
fi

menu () {
if [ ! "$AUTO" ]; then
	clear

	echo "Swordrune10's Android Kitchen!"
	echo "=============================="
	echo "What are we setting up?"
	echo "  1. Install the repo command"
	echo "  2. initialize the build enviroment"
	echo "  3. initialize the Kitchen app repository"
	echo "  4. initialize the Android Open Kang Project repository"
	echo "  5. initialize the Android Open Source Project repository"
	echo "  6. initialize the BAMF Paradigm repository"
	echo "  7. initialize the Bugless Beast repository"
	echo "  8. initialize the Codename Android repository"
	echo "  9. initialize the Cyanogenmod 9 repository"
	echo "  10. initialize the Cyanogenmod 10 repository"
	echo "  11. initialize the Cyanogenmod 10.2 repository"
	echo "  12. initialize the Evervolv repository"
	echo "  13. initialize the ParanoidAndroid repository"
	echo "  14. initialize the Rooted & Busyboxed AOSP repository"
	echo "  15. initialize the Team Gummy repository"
	echo "  16. initialize all of the above"
	echo "  17. Go Back"
	echo ""
	echo "Which one would you like to do?"
	read setupanswer

	if [ ! "$setupanswer" ] || ( echo $setupanswer | grep -q [A-Za-z] ) || [ $setupanswer -gt "17" ]; then
		echo ""
		echo "You did not make a proper selection, try again!"
		read -p "Press Enter to continue: " done
		menu
	fi
fi

if [ "$parameter" ]; then
	if [ $parameter == "list" ]; then
		echo "repo = Install the repo command"
		echo "kitchen = initialize Kitchen"
		echo "aokp = initialize Android Open Kang Project"
		echo "aosp = initialize Android Open Source Project"
		echo "bamf = initialize BAMF Paradigm"
		echo "bugless = initialize Bugless Beast"
		echo "cna = initialize Codename Android"
		echo "cm9 = initialize Cyanogenmod 9"
		echo "cm10 = initialize Cyanogenmod 10"
		echo "cm = initialize Cyanogenmod 10.2"
		echo "ev = initialize Evervolv"
		echo "paranoid = initialize ParanoidAndroid"
		echo "raosp = initialize Rooted & Busyboxed AOSP"
		echo "gummy = initialize Team Gummy"
		echo "all = initialize all repos"
		exit 0
	fi

	if [ $parameter == "repo" ]; then
		setupanswer="1"
	fi

	if [ $parameter == "kitchen" ]; then
		setupanswer="3"
	fi

	if [ $parameter == "aokp" ]; then
		setupanswer="4"
	fi

	if [ $parameter == "aosp" ]; then
		setupanswer="5"
	fi

	if [ $parameter == "bamf" ]; then
		setupanswer="6"
	fi

	if [ $parameter == "bugless" ]; then
		setupanswer="7"
	fi

	if [ $parameter == "cna" ]; then
		setupanswer="8"
	fi

	if [ $parameter == "cm9" ]; then
		setupanswer="9"
	fi

	if [ $parameter == "cm10" ]; then
		setupanswer="10"
	fi

	if [ $parameter == "cm" ]; then
		setupanswer="11"
	fi

	if [ $parameter == "ev" ] || [ $parameter == "evervolv" ]; then
		setupanswer="12"
	fi

	if [ $parameter == "paranoid" ]; then
		setupanswer="13"
	fi

	if [ $parameter == "raosp" ]; then
		setupanswer="14"
	fi

	if [ $parameter == "gummy" ]; then
		setupanswer="15"
	fi

	if [ $parameter == "all" ]; then
		setupanswer="16"
	fi
fi

if [ $setupanswer == "1" ]; then
	if ( type -a repo &> /dev/null ); then
		echo ""
		echo "repo is already installed.."
	else
		echo ""
		echo "Installing the repo command.."

		if ( ! find ~/bin &> /dev/null ); then
			mkdir ~/bin
		fi

		wget https://dl-ssl.google.com/dl/googlesource/git-repo/repo -O ~/bin/repo
		chmod a+x ~/bin/repo

		echo ""
		echo "Finished!"
		read -p "Press Enter to continue: " done
	fi
fi

if [ $setupanswer == "2" ]; then
	environmentsetup
fi

setupcheck() {
if [ ! "$kitchensync" ]; then
	repo_folder=$( echo "$REPOS/$script_repo-$repo_platform" )
else
	repo_folder=$( echo "$LOCAL/.." )
fi

if ( ! find $repo_folder/.repo &> /dev/null ); then
	echo "initializing $repo_name repository.."
	setupcode
else
	echo "$repo_name already initialized.."
	echo "did you want to reinitialize it?"
	read reinit
	
	if [ "$reinit" == "yes" ] || [ "$reinit" == "y" ]; then
		rm -rf 	$repo_folder/.repo	
		
		echo "reinitializing $repo_name repository.."
		setupcode
	else
		read -p "$repo_name wasn't reinitialized, Press Enter to continue: " done
		menu
	fi
fi
}

setupcode() {
if [ ! "$kitchensync" ]; then
	mkdir -p $repo_folder
fi

cd $repo_folder

repo init -u $repo_url -b $repo_branch

echo ""
echo "Sync $repo_name repository?"
read -p "yes/no? " newreposync

if [ "$newreposync" == "yes" ] || [ "$newreposync" == "y" ]; then
	INIT=""
	reposync $script_repo
else
	echo ""
	echo "$repo_name repository did not sync.."
fi

echo ""
echo "Finished!"
read -p "Press Enter to continue: " done

if [ ! "$AUTO" ]; then
	menu
else
	exit 0
fi
}

if [ $setupanswer == "3" ]; then
	kitchensync=true
	script_repo=$(echo "kitchen")
	repo_branch=$(echo "master")
	repo_name=$(echo "Kitchen app")
	repo_url=$(echo "http://github.com/TeamKeyblade/android_manifest.git")
	setupcheck
fi

if [ $setupanswer == "4" ]; then
	script_repo=$(echo "aokp")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "jb")
	repo_name=$(echo "Android Open Kang Project")
	repo_url=$(echo "http://github.com/AOKP/platform_manifest.git")
	setupcheck
fi

if [ $setupanswer == "5" ]; then
	script_repo=$(echo "aosp")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "android-4.3_r2.2")
	repo_name=$(echo "Android Open Source Project")
	repo_url=$(echo "https://android.googlesource.com/platform/manifest")
	setupcheck
fi

if [ $setupanswer == "6" ]; then
	script_repo=$(echo "bamf")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "master")
	repo_name=$(echo "BAMF Paradigm")
	repo_url=$(echo "http://github.com/TeamBAMF/platform_manifest.git")
	setupcheck
fi

if [ $setupanswer == "7" ]; then
	script_repo=$(echo "bugless")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "jb")
	repo_name=$(echo "Bugless Beast")
	repo_url=$(echo "http://github.com/peteralfonso/platform_manifest.git")
	setupcheck
fi

if [ $setupanswer == "8" ]; then
	script_repo=$(echo "cna")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "Codename Android")
	repo_url=$(echo "http://github.com/CNA/android_manifest.git")
	setupcheck
fi

if [ $setupanswer == "9" ]; then
	script_repo=$(echo "cm")
	repo_platform=$(echo "ics")
	repo_branch=$(echo "ics")
	repo_name=$(echo "Cyanogenmod 9")
	repo_url=$(echo "http://github.com/CyanogenMod/android.git")
	setupcheck
fi

if [ $setupanswer == "10" ]; then
	script_repo=$(echo "cm")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "Cyanogenmod 10")
	repo_url=$(echo "http://github.com/CyanogenMod/android.git")
	setupcheck
fi

if [ $setupanswer == "11" ]; then
	script_repo=$(echo "cm")
	repo_platform=$(echo "10.2")
	repo_branch=$(echo "cm-10.2")
	repo_name=$(echo "Cyanogenmod 10.2")
	repo_url=$(echo "http://github.com/CyanogenMod/android.git")
	setupcheck
fi

if [ $setupanswer == "12" ]; then
	script_repo=$(echo "evervolv")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "Evervolv")
	repo_url=$(echo "http://github.com/Evervolv/android.git")
	setupcheck
fi

if [ $setupanswer == "13" ]; then
	script_repo=$(echo "paranoid")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "ParanoidAndroid")
	repo_url=$(echo "http://github.com/ParanoidAndroid/android.git")
	setupcheck
fi

if [ $setupanswer == "14" ]; then
	script_repo=$(echo "raosp")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "Rooted & Busyboxed AOSP")
	repo_url=$(echo "http://github.com/TeamKeyblade/android_manifest.git")
	setupcheck
fi

if [ $setupanswer == "15" ]; then
	script_repo=$(echo "gummy")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "master")
	repo_name=$(echo "Team Gummy")
	repo_url=$(echo "http://github.com/teamgummy/platform_manifest.git")
	setupcheck
fi

if [ $setupanswer == "16" ]; then
	kitchensync=true
	script_repo=$(echo "kitchen")
	repo_branch=$(echo "master")
	repo_name=$(echo "Kitchen app")
	repo_url=$(echo "http://github.com/TeamKeyblade/android_manifest.git")
	setupcheck

	script_repo=$(echo "aokp")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "jb")
	repo_name=$(echo "Android Open Kang Project")
	repo_url=$(echo "http://github.com/AOKP/platform_manifest.git")
	setupcheck

	script_repo=$(echo "aosp")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "android-4.3_r2.2")
	repo_name=$(echo "Android Open Source Project")
	repo_url=$(echo "https://android.googlesource.com/platform/manifest")
	setupcheck

	script_repo=$(echo "bamf")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "master")
	repo_name=$(echo "BAMF Paradigm")
	repo_url=$(echo "http://github.com/TeamBAMF/platform_manifest.git")
	setupcheck

	script_repo=$(echo "bugless")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "jb")
	repo_name=$(echo "Bugless Beast")
	repo_url=$(echo "http://github.com/peteralfonso/platform_manifest.git")
	setupcheck

	script_repo=$(echo "cna")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "Codename Android")
	repo_url=$(echo "http://github.com/CNA/android_manifest.git")
	setupcheck

	script_repo=$(echo "cm")
	repo_platform=$(echo "ics")
	repo_branch=$(echo "ics")
	repo_name=$(echo "Cyanogenmod 9")
	repo_url=$(echo "http://github.com/CyanogenMod/android.git")
	setupcheck

	script_repo=$(echo "cm")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "Cyanogenmod 10")
	repo_url=$(echo "http://github.com/CyanogenMod/android.git")
	setupcheck

	script_repo=$(echo "cm")
	repo_platform=$(echo "10.2")
	repo_branch=$(echo "cm-10.2")
	repo_name=$(echo "Cyanogenmod 10.2")
	repo_url=$(echo "http://github.com/CyanogenMod/android.git")
	setupcheck

	script_repo=$(echo "evervolv")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "Evervolv")
	repo_url=$(echo "http://github.com/Evervolv/android.git")
	setupcheck

	script_repo=$(echo "paranoid")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "ParanoidAndroid")
	repo_url=$(echo "http://github.com/ParanoidAndroid/android.git")
	setupcheck

	script_repo=$(echo "raosp")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "Rooted & Busyboxed AOSP")
	repo_url=$(echo "http://github.com/TeamKeyblade/android_manifest.git")
	setupcheck

	script_repo=$(echo "gummy")
	repo_platform=$(echo "jb")
	repo_branch=$(echo "master")
	repo_name=$(echo "Team Gummy")
	repo_url=$(echo "http://github.com/teamgummy/platform_manifest.git")
	setupcheck
fi

if [ $setupanswer == "17" ]; then
	echo ""
	read -p "Returning to Main Menu, Press Enter to continue: " done
	exit 0
fi

if [ $AUTO ]; then
	exit 0
fi

menu
}
menu
