#!/bin/bash
# Written by Sean Donovan (swordrune10)

if [ ! "$INIT" ]; then
	parameter=$(echo "$1")
fi

if [ "$parameter" ]; then
	export AUTO=true
fi

if [ ! "$INIT" ]; then
	cd $(dirname $0)
	export SCRIPT=$(echo "reposync")
	../headerfile
	exit 0
fi

menu () {

if [ ! "$AUTO" ]; then
	clear

	echo "Swordrune10's Android Kitchen!"
	echo "=============================="
	echo "What are we updating?"
	echo "If repo isn't initialized, it will be on update"
	echo "  1. Install the repo command"
	echo "  2. Setup the build enviroment"
	echo "  3. Update the Kitchen app repository"
	echo "  4. Update the Android Open Kang Project repository"
	echo "  5. Update the Android Open Source Project repository"
	echo "  6. Update the BAMF Paradigm repository"
	echo "  7. Update the Bugless Beast repository"
	echo "  8. Update the Codename Android repository"
	echo "  9. Update the Cyanogenmod 9 repository"
	echo "  10. Update the Cyanogenmod 10 repository"
	echo "  11. Update the Cyanogenmod 10.2 repository"
	echo "  12. Update the Evervolv repository"
	echo "  13. Update the ParanoidAndroid repository"
	echo "  14. Update the Rooted & Busyboxed AOSP repository"
	echo "  15. Update the Team Gummy repository"
	echo "  16. Update all available repositories"
	echo "  17. Go Back"
	read setupanswer

	if [ ! "$setupanswer" ] || ( echo $setupanswer | grep -q [A-Za-z] ) || [ $setupanswer -gt "17" ]; then
		echo ""
		echo "You did not make a proper selection, try again!"
		read -p "Press Enter to continue: " done
		menu
	fi
fi

if [ "$parameter" ]; then
	if [ $parameter == "list" ]; then
		echo "kitchen = Update Kitchen"
		echo "aokp = Update Android Open Kang Project"
		echo "aosp = Update Android Open Source Project"
		echo "bamf = Update BAMF Paradigm"
		echo "bugless = Update Bugless Beast"
		echo "cna = Update Codename Android"
		echo "cm9 = Update Cyanogenmod 9"
		echo "cm10 = Update Cyanogenmod 10"
		echo "cm = Update Cyanogenmod 10.2"
		echo "ev = Update Evervolv"
		echo "paranoid = Update ParanoidAndroid"
		echo "raosp = Update Rooted & Busyboxed AOSP"
		echo "gummy = Update Team Gummy"
		echo "all = Update all available repos"
		exit 0
	fi

	if [ $parameter == "kitchen" ]; then
		setupanswer="1"
	fi

	if [ $parameter == "aokp" ]; then
		setupanswer="2"
	fi

	if [ $parameter == "aosp" ]; then
		setupanswer="3"
	fi

	if [ $parameter == "bamf" ]; then
		setupanswer="4"
	fi

	if [ $parameter == "bugless" ]; then
		setupanswer="5"
	fi

	if [ $parameter == "cna" ]; then
		setupanswer="6"
	fi

	if [ $parameter == "cm9" ]; then
		setupanswer="7"
	fi

	if [ $parameter == "cm10" ]; then
		setupanswer="8"
	fi

	if [ $parameter == "cm" ]; then
		setupanswer="9"
	fi

	if [ $parameter == "ev" ] || [ $parameter == "evervolv" ]; then
		setupanswer="10"
	fi

	if [ $parameter == "paranoid" ]; then
		setupanswer="11"
	fi

	if [ $parameter == "raosp" ]; then
		setupanswer="12"
	fi

	if [ $parameter == "gummy" ]; then
		setupanswer="13"
	fi

	if [ $parameter == "all" ]; then
		setupanswer="14"
	fi
fi

setupcheck() {
if [ $SCRIPT_REPO == "kitchen" ]; then
	export REPO_FOLDER=$( echo "$LOCAL/.." )
else
	export REPO_FOLDER=$( echo "$REPOS/$SCRIPT_REPO-$REPO_PLATFORM" )
fi

if ( ! find $REPO_FOLDER/.repo &> /dev/null); then
	setupcode
fi
	synccode

echo ""
echo "$repo_name Update Complete!"

if [ ! "$AUTO" ]; then
	echo ""
	echo "Finished!"
	read -p "Press Enter to continue: " done
	menu
else
	exit 0
fi
}

setupcode() {
echo ""
echo "$repo_name not initialized, initializing now.."

if [ ! $SCRIPT_REPO == "kitchen" ]; then
	mkdir -p $REPO_FOLDER
fi

cd $REPO_FOLDER

repo init -u $repo_url -b $repo_branch
}

synccode() {
supersync=$( expr $THREADS_TOTAL \* 2 )

echo ""
echo "Updating $repo_name repository.."

cd $REPO_FOLDER

preupdate
repo sync -j$supersync

$LOCAL/config/gitpuller

postupdate
}

if [ $setupanswer == "1" ]; then
	if ( type -a repo &> /dev/null ); then
		echo ""
		echo "repo is already installed.."
	else
		echo ""
		echo "Installing the repo command.."

		if ( ! find ~/bin &> /dev/null ); then
			mkdir ~/bin
		fi

		wget https://dl-ssl.google.com/dl/googlesource/git-repo/repo -O ~/bin/repo
		chmod a+x ~/bin/repo

		echo ""
		echo "Finished!"
		read -p "Press Enter to continue: " done
	fi
fi

if [ $setupanswer == "2" ]; then
	environmentsetup
fi

if [ $setupanswer == "3" ]; then
	export SCRIPT_REPO=$(echo "kitchen")
	export REPO_PLATFORM=$(echo "stable")
	repo_branch=$(echo "stable")
	repo_name=$(echo "Kitchen app")
	repo_url=$(echo "http://github.com/TeamKeyblade/android_manifest.git")
	setupcheck
fi

if [ $setupanswer == "4" ]; then
	export SCRIPT_REPO=$(echo "aokp")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "jb")
	repo_name=$(echo "Android Open Kang Project")
	repo_url=$(echo "http://github.com/AOKP/platform_manifest.git")
	setupcheck
fi

if [ $setupanswer == "5" ]; then
	export SCRIPT_REPO=$(echo "aosp")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "android-4.3_r2.2")
	repo_name=$(echo "Android Open Source Project")
	repo_url=$(echo "https://android.googlesource.com/platform/manifest")
	setupcheck
fi

if [ $setupanswer == "6" ]; then
	export SCRIPT_REPO=$(echo "bamf")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "master")
	repo_name=$(echo "BAMF Paradigm")
	repo_url=$(echo "http://github.com/TeamBAMF/platform_manifest.git")
	setupcheck
fi

if [ $setupanswer == "7" ]; then
	export SCRIPT_REPO=$(echo "bugless")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "jb")
	repo_name=$(echo "Bugless Beast")
	repo_url=$(echo "http://github.com/peteralfonso/platform_manifest.git")
	setupcheck
fi

if [ $setupanswer == "8" ]; then
	export SCRIPT_REPO=$(echo "cna")
	export REPO_PLATFORM=$(echo "jb")
	repo_name=$(echo "Codename Android")
	repo_url=$(echo "http://github.com/CNA/android_manifest.git")
	setupcheck
fi

if [ $setupanswer == "9" ]; then
	export SCRIPT_REPO=$(echo "cm")
	export REPO_PLATFORM=$(echo "ics")
	repo_branch=$(echo "ics")
	repo_name=$(echo "Cyanogenmod 9")
	repo_url=$(echo "http://github.com/CyanogenMod/android.git")
	setupcheck
fi

if [ $setupanswer == "10" ]; then
	export SCRIPT_REPO=$(echo "cm")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "Cyanogenmod 10")
	repo_url=$(echo "http://github.com/CyanogenMod/android.git")
	setupcheck
fi

if [ $setupanswer == "11" ]; then
	export SCRIPT_REPO=$(echo "cm")
	export REPO_PLATFORM=$(echo "10.2")
	repo_branch=$(echo "cm-10.2")
	repo_name=$(echo "Cyanogenmod 10.2")
	repo_url=$(echo "http://github.com/CyanogenMod/android.git")
	setupcheck
fi

if [ $setupanswer == "12" ]; then
	export SCRIPT_REPO=$(echo "evervolv")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "Evervolv")
	repo_url=$(echo "http://github.com/Evervolv/android.git")
	setupcheck
fi

if [ $setupanswer == "13" ]; then
	export SCRIPT_REPO=$(echo "paranoid")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "ParanoidAndroid")
	repo_url=$(echo "http://github.com/ParanoidAndroid/android.git")
	setupcheck
fi

if [ $setupanswer == "14" ]; then
	export SCRIPT_REPO=$(echo "raosp")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "Rooted & Busyboxed AOSP")
	repo_url=$(echo "http://github.com/TeamKeyblade/android_manifest.git")
	setupcheck
fi

if [ $setupanswer == "15" ]; then
	export SCRIPT_REPO=$(echo "gummy")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "master")
	repo_name=$(echo "Team Gummy")
	repo_url=$(echo "http://github.com/teamgummy/platform_manifest.git")
	setupcheck
fi

if [ $setupanswer == "16" ]; then
	export SCRIPT_REPO=$(echo "kitchen")
	export REPO_PLATFORM=$(echo "master")
	repo_branch=$(echo "master")
	repo_name=$(echo "Kitchen app")
	repo_url=$(echo "http://github.com/TeamKeyblade/android_manifest.git")
	setupcheck

	export SCRIPT_REPO=$(echo "aokp")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "jb")
	repo_name=$(echo "Android Open Kang Project")
	repo_url=$(echo "http://github.com/AOKP/platform_manifest.git")
	setupcheck

	export SCRIPT_REPO=$(echo "aosp")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "android-4.3_r2.2")
	repo_name=$(echo "Android Open Source Project")
	repo_url=$(echo "https://android.googlesource.com/platform/manifest")
	setupcheck

	export SCRIPT_REPO=$(echo "bamf")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "master")
	repo_name=$(echo "BAMF Paradigm")
	repo_url=$(echo "http://github.com/TeamBAMF/platform_manifest.git")
	setupcheck

	export SCRIPT_REPO=$(echo "bugless")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "jb")
	repo_name=$(echo "Bugless Beast")
	repo_url=$(echo "http://github.com/peteralfonso/platform_manifest.git")
	setupcheck

	export SCRIPT_REPO=$(echo "cna")
	export REPO_PLATFORM=$(echo "jb")
	repo_name=$(echo "Codename Android")
	repo_url=$(echo "http://github.com/CNA/android_manifest.git")
	setupcheck

	export SCRIPT_REPO=$(echo "cm")
	export REPO_PLATFORM=$(echo "ics")
	repo_branch=$(echo "ics")
	repo_name=$(echo "Cyanogenmod 9")
	repo_url=$(echo "http://github.com/CyanogenMod/android.git")
	setupcheck

	export SCRIPT_REPO=$(echo "cm")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "Cyanogenmod 10")
	repo_url=$(echo "http://github.com/CyanogenMod/android.git")
	setupcheck

	export SCRIPT_REPO=$(echo "cm")
	export REPO_PLATFORM=$(echo "10.2")
	repo_branch=$(echo "cm-10.2")
	repo_name=$(echo "Cyanogenmod 10.2")
	repo_url=$(echo "http://github.com/CyanogenMod/android.git")
	setupcheck

	export SCRIPT_REPO=$(echo "evervolv")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "Evervolv")
	repo_url=$(echo "http://github.com/Evervolv/android.git")
	setupcheck

	export SCRIPT_REPO=$(echo "paranoid")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "ParanoidAndroid")
	repo_url=$(echo "http://github.com/ParanoidAndroid/android.git")
	setupcheck

	export SCRIPT_REPO=$(echo "raosp")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "jellybean")
	repo_name=$(echo "Rooted & Busyboxed AOSP")
	repo_url=$(echo "http://github.com/TeamKeyblade/android_manifest.git")
	setupcheck

	export SCRIPT_REPO=$(echo "gummy")
	export REPO_PLATFORM=$(echo "jb")
	repo_branch=$(echo "master")
	repo_name=$(echo "Team Gummy")
	repo_url=$(echo "http://github.com/teamgummy/platform_manifest.git")
	setupcheck
fi

if [ $setupanswer == "17" ]; then
	echo ""
	read -p "Returning to Main Menu, Press Enter to continue: " done
	exit 0
fi

if [ $AUTO ]; then
	exit 0
fi

menu
}
menu
