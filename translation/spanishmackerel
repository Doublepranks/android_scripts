#!/bin/bash
# Copyright (C) 2014 Sean Donovan

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#    http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Spanish

## Common
export KITCHENTITLE=$( echo " Cocina Android De Swordrune10!" )
export KITCHENUNDERLINE=$( echo "==============================" )
export MENUGOBACK=$( echo "Volver Atras" )
export NOTPROPERSELECTION=$( echo "No hiciste la selección adecuada, vuelve a intentarlo!" )
export ENTERTOCONTINUE=$( echo "Pulse Intro para continuar: " )
export MAINMENURETURN=$( echo "Volviendo al Menú Principal, Presiona Intro para Continuar: " )
## NEEDS TRANSLATION! 
export ABORTMESSAGE=$( echo "Aborting.." )
## NEEDS TRANSLATION!
export COMPLETEDMESSAGE=$( echo "Finalizado!" )
export ANSWERYES=$( echo "sí" )
export ANSWERY=$( echo "s" )
export ANSWERNO=$( echo "no" )
export ANSWERN=$( echo "n" )

## Errors
## NEEDS TRANSLATION!
export ERRORCONTACTINFO=$( echo "If you see this in error, please notify me at either xda or rootzwiki
If you prefer email you can reach me at mishana@swordrune10.net
If your also inclined, i have a freenode channel #Swordrune10Kitchen" )
export ENVIRONMENTSETUP32BIT=$( echo "32-bit not supported!
=====================
Build enviroment installation only supports 64-bit Operating Systems" )
export ENVIRONMENTSETUPNOTSUPPORTED=$( echo "Operating System not supported!
===============================
Supported Operating Systems (only 64-bit):
Ubuntu 10.04 - 13.10 (Full Support)
Debian (General Support)
Linux Mint (General Support)
Arch Linux (General Support)
Fedora (General Support)
Mac OS X (Semi-General Support)" )
## NEEDS TRANSLATION!

## Repos
export REPOSKITCHEN=$( echo "Kitchen app" )
export REPOSAOKP=$( echo "Android Open Kang Project" )
export REPOSAOSP43=$( echo "Android Open Source Project 4.3" )
export REPOSAOSP=$( echo "Android Open Source Project 4.4" )
export REPOSCARBON=$( echo "Carbon" )
export REPOSCM10=$( echo "Cyanogenmod 10.2" )
export REPOSCM=$( echo "Cyanogenmod 11" )
export REPOSEV=$( echo "Evervolv" )
export REPOSOMNI=$( echo "omnirom" )
export REPOSPACMAN=$( echo "PAC-man" )
export REPOSPARA=$( echo "ParanoidAndroid" )

## Scriptmakir
## NEEDS TRANSLATION!
export SCRIPTMAKIRREDEEMER=$( echo "Redeemer is running!" )
export SCRIPTMAKIRRMKITCHEN=$( echo "Removing Kitchen" )
export SCRIPTMAKIRSETUPKITCHEN=$( echo "Settng Up Kitchen" )
export SCRIPTMAKIRDESTROYER=$( echo "Destroyer is running!" )
export SCRIPTMAKIRDESTROYEROFWORLDS=$( echo "Destroyer of Worlds is running!" )
export SCRIPTMAKIRRMREPO=$( echo "Removing Repository folder" )
## NEEDS TRANSLATION!

## Kitchen
export KITCHENMAINMENU=$( echo "Menú Principal:" )
export KITCHENMENU1=$( echo "  1. Configuración/Actualizar Cocina" )
export KITCHENMENU2=$( echo "  2. Configurar Cocina" )
export KITCHENMENU3=$( echo "  3. Ejecutar Cocina " )
export KITCHENMENU4=$( echo "  4. Reparar Cocina" )
export KITCHENMENU5=$( echo "  5. Generar la Cocina Automáticamente" )
export KITCHENMENU6=$( echo "  6. Salir" )
export KITCHENMENUWHICH=$( echo "¿Cuál quieres hacer?" )
export KITCHENTHANKS=$( echo "Gracias por utilizar la cocina de Swordrune10! Adiós.." )
export KITCHENBORED=$( echo "Pareces aburrido .. ¿Quieres ver una película?" )
export KITCHENTOUGH=$( echo "Complicado!" )

## Reposync
# Usage and Flags
export REPOSYNCUSAGE=$( echo "repo -- programa para inicializar/actualizar repositorio Android" )
export REPOSYNCFLAGD=$( echo "eliminar la carpeta apropiada y salir del programa" )
export REPOSYNCFLAGH=$( echo "mostrar texto de ayuda" )
export REPOSYNCFLAGP=$( echo "purgar carpeta, reiniciar y entonces actualizar" )
export REPOSYNCFLAGU=$( echo "actualizar repositorio en particular" )
export REPOSYNCUPDATE1=$( echo "Actualizar $REPOSKITCHEN" )
export REPOSYNCUPDATE2=$( echo "Actualizar $REPOSAOKP" )
export REPOSYNCUPDATE3=$( echo "Actualizar $REPOSAOSP43" )
export REPOSYNCUPDATE4=$( echo "Actualizar $REPOSAOSP" )
export REPOSYNCUPDATE5=$( echo "Actualizar $REPOSCARBON" )
export REPOSYNCUPDATE6=$( echo "Actualizar $REPOSCM10" )
export REPOSYNCUPDATE7=$( echo "Actualizar $REPOSCM" )
export REPOSYNCUPDATE8=$( echo "Actualizar $REPOSEV" )
export REPOSYNCUPDATE9=$( echo "Actualizar $REPOSOMNI" )
export REPOSYNCUPDATE10=$( echo "Actualizar $REPOSPACMAN" )
export REPOSYNCUPDATE11=$( echo "Actualizar $REPOSPARA" )
export REPOSYNCUPDATE12=$( echo "Actualizar todos los repositorios disponibles" )
export REPOSYNCUPDATE13=$( echo "Actualizar todos los repositorios" )
export REPOSYNCUSAGEEXAMP=$( echo "Ejemplo: reposync -u cm-10.2" )
export REPOSYNCUSAGELIST1=$( echo "escribiendo \"reposync -u list\" dará a" )
export REPOSYNCUSAGELIST2=$( echo "mostrando lista de opciones " )

# Menu
export REPOSYNCMENUWHAT=$( echo "¿Qué estamos actualizando?" )
export REPOSYNCMENUINIT=$( echo "Si repositorio no está inicializado, será en la actualización" )
export REPOSYNCMENU1=$( echo "instale el comando de repositorio" )
export REPOSYNCMENU2=$( echo "Configure el entorno de compilación" )
export REPOSYNCMENU3=$( echo "Actualizar el $REPOSKITCHEN repositorio" )
export REPOSYNCMENU4=$( echo "Actualizar el $REPOSAOKP repositorio" )
export REPOSYNCMENU5=$( echo "Actualizar el $REPOSAOSP43 repositorio" )
export REPOSYNCMENU6=$( echo "Actualizar el $REPOSAOSP repositorio" )
export REPOSYNCMENU7=$( echo "Actualizar el $REPOSCARBON repositorio" )
export REPOSYNCMENU8=$( echo "Actualizar el $REPOSCM10 repositorio" )
export REPOSYNCMENU9=$( echo "Actualizar el $REPOSCM repositorio" )
export REPOSYNCMENU10=$( echo "Actualizar el $REPOSEV repositorio" )
export REPOSYNCMENU11=$( echo "Actualizar el $REPOSOMNI repositorio" )
export REPOSYNCMENU12=$( echo "Actualizar el $REPOSPACMAN repositorio" )
export REPOSYNCMENU13=$( echo "Actualizar el $REPOSPARA repositorio" )
export REPOSYNCMENU14=$( echo "Actualizar todos los repositorios disponibles" )
export REPOSYNCMENU15=$( echo "Actualizar todos los repositorios!" )
export REPOSYNCMENU16=$( echo "Actualizar/Añadir otros Repositorios" )

# Sync and Init
export REPOSYNCNOTINITSKIP=$( echo "no inicializado, saltando" )
export REPOSYNCUPDATING=$( echo "Actualizando" )
export REPOSYNCBLAHSMANIFEST=$( echo "Manifiesto de" )
export REPOSYNCNOTINITYET=$( echo "no inicializando, inicializando ahora" )
export REPOSYNCNOTINITWANTTO=$( echo "no inicializado, ¿desea inicializarlo?" )
export REPOSYNCINIT=$( echo "inicializando" )
export REPOSYNCNOTINIT=$( echo "no fue inicializado" )
export REPOSYNCREPO=$( echo "repositorio" )
export REPOSYNCREPOALREADY=$( echo "comando de repositorio, actualmente instalado" )
export REPOSYNCREPOINSTALL=$( echo "Instalando el comando de repositorio" )
export REPOSYNCCOMPLETE=$( echo "Actualizacion Completada!" )

# Otherrepo Sync and Init
export REPOSYNCADDOR=$( echo "Estamos actualizando o añadiendo otro repositorio" )
export REPOSYNCOTHERMENU1=$( echo "Añadir a carpeta de repositorios personalizados" )
export REPOSYNCOTHERMENU2=$( echo "Actualizar todos los repositorios personalizados" )
export REPOSYNCOTHERREPONAME=$( echo "Cual es el nombre de repositorio?" )
export REPOSYNCOTHERREPOSHORTNAME=$( echo "Cual es la abreviatura de este Repositorio. Ejemplo: Android Open Source Project = aosp" )
export REPOSYNCOTHERREPOURL=$( echo "Cual es la url hasta el manifiesto del repositorio?" )
export REPOSYNCOTHERREPOBRANCH=$( echo "¿Cuál es la rama del manifiesto que desea utilizar?" )

## EVERYTHING BELOW NEEDS TRANSLATION!

## Environmentsetup
export ENVIRONMENTSETUPINIT=$( echo "Initilizing the build environment" )
export ENVIRONMENTSETUPOS=$( echo "Checking what Operating System you are running.." )
export ENVIRONMENTSETUPINSTALL=$( echo "Installing packages needed, please enter your password" )
export ENVIRONMENTSETUPDXCODE=$( echo "Is Xcode installed? We recommend version 3.1.4 or newer" )
export ENVIRONMENTSETUPDMACPORTS=$( echo "Is MacPorts installed?" )

# Platform
export ENVIRONMENTSETUPFEDORA=$( echo "You are running Fedora or RedHat!" )
export ENVIRONMENTSETUPDEBIAN=$( echo "You are running Debian!" )
export ENVIRONMENTSETUPULMN=$( echo "You are running Ubuntu, either 10.04, 10.10, or 11.04!" )
export ENVIRONMENTSETUPUO=$( echo "You are running Ubuntu 11.10!" )
export ENVIRONMENTSETUPUPQ=$( echo "You are running Ubuntu 12.04 or 12.10!" )
export ENVIRONMENTSETUPURS=$( echo "You are running Ubuntu 13.04 or 13.10!" )
export ENVIRONMENTSETUPMINT=$( echo "You are running Linux Mint!" )
export ENVIRONMENTSETUPARCH=$( echo "You are running Arch Linux!" )
export ENVIRONMENTSETUPDARWIN=$( echo "You are running Mac OS X!" )

# Java
export ENVIRONMENTSETUPFLEXION=$( echo "Installing java will take a while, to do this legally the Kitchen app will use exerpts from flexion.org oab-java script" )
export ENVIRONMENTSETUPFLEXION1=$( echo " [x] Getting Java SE download page" )
export ENVIRONMENTSETUPFLEXION2=$( echo " [x] Getting current release download page" )
export ENVIRONMENTSETUPFLEXION3=$( echo " [x] Getting previous releases download page" )
export ENVIRONMENTSETUPWEBUPD8=$( echo "Installing java will take a while, to do this legally the Kitchen app will use webupd8's java installer" )

## Preupdate
export PREUPDATEAOSP43=$( echo "Updating $REPOSAOSP43's local_manifests folder" )
export PREUPDATEAOSP=$( echo "Updating $REPOSAOSP's local_manifests folder" )
export PREUPDATECM10=$( echo "Updating $REPOSCM10's local_manifests folder" )
export PREUPDATECM=$( echo "Updating $REPOSCM's local_manifests folder" )
export PREUPDATEOMNI=$( echo "Updating $REPOSOMNI's local_manifests folder" )
