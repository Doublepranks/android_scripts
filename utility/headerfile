#!/bin/bash
# Copyright (C) 2014 Sean Donovan

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#    http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Declare global variables
if ( uname -a | grep -q Darwin ); then
	export POSIXLY_CORRECT=1
	export LOCAL=$( echo "/Volumes/android/swordkitchen/.scripts" )
else
	export LOCAL=$( cd ../$(dirname $0) && pwd )
fi

if [ $LOCAL == $HOME/bin/kitchen ]; then
        mkdir -p $LOCAL/../../Documents/android/repos
        export REPOS=$( cd "$LOCAL/../../Documents/android/repos" && pwd )
else
        mkdir -p $LOCAL/../../repos
        export REPOS=$( cd "$LOCAL/../../repos" && pwd )
fi

mkdir -p $REPOS/../builds
export BUILDS=$( cd "$REPOS/../builds" && pwd )

if ( find $BUILDS/../publish &> /dev/null); then
	cd $BUILDS/../publish
	export PUBLISH=$( cd $(dirname $0) && pwd )
fi

# ::::::::::::::::::::::::::::::::::::::::::::::

# Declare paths
if ( ! echo $PATH | grep -q "$HOME/bin:" ); then
	export PATH="$HOME/bin:$PATH"
fi

if ( ! echo $PATH | grep -q $LOCAL ); then
	export PATH="$LOCAL/config:$PATH"
	export PATH="$LOCAL/repair:$PATH"
	export PATH="$LOCAL/update:$PATH"
	export PATH="$LOCAL/utility:$PATH"
	export PATH="$LOCAL/build:$PATH"
	export PATH="$LOCAL:$PATH"
fi

if ( find $BUILDS/../publish &> /dev/null) && ( ! echo $PATH | grep -q "$PUBLISH:" ); then
	export PATH="$PUBLISH:$PATH"
fi

# ::::::::::::::::::::::::::::::::::::::::::::::

# Create necessary files/folders if not found
mkdir -p $LOCAL/xml

if ( ! find $LOCAL/xml/*.xml &> /dev/null ); then
	export AUTHOR="xml"
	scriptmakir
fi

mkdir -p $LOCAL/config

if ( ! find $LOCAL/config/gitpuller &> /dev/null ); then
	export AUTHOR="gitpuller"
	scriptmakir
fi

if ( ! find $LOCAL/config/romeditor &> /dev/null ); then
	export AUTHOR="romeditor"
	scriptmakir
fi

if ( ! find $LOCAL/config/otherrepo &> /dev/null ) || ( ! find $LOCAL/config/otherreponame &> /dev/null ); then
	export AUTHOR="otherrepo"
	scriptmakir
fi

# ::::::::::::::::::::::::::::::::::::::::::::::

# Declare number of threads from processor and declare sync number
processors=$( cat /proc/cpuinfo | grep "processor" | wc -l )
cores=$( cat /proc/cpuinfo | grep -m 1 "cpu cores" | grep -o [0-9] )
threads=$( cat /proc/cpuinfo | grep -m 1 siblings | grep -o [0-9] )

export CPU_POWER_TOTAL=$( expr $processors \* $cores \* $threads )

if [ "$CPU_POWER_TOTAL" == "0" ]; then
	export CPU_POWER_TOTAL=$( echo "1" )
fi

export NETWORKSYNC=$( expr $CPU_POWER_TOTAL \* 2 )
export LOCALSYNC=$( expr $NETWORKSYNC \* 4 )

# ::::::::::::::::::::::::::::::::::::::::::::::

# If root, make files made read and write
if [ $(whoami) == "root" ]; then
	umask 000
fi

# ::::::::::::::::::::::::::::::::::::::::::::::

# Start kitchen
if [ "$START" ]; then
	export START=""
	export INIT=true
	kitchen
	exit 0
elif [ "$SCRIPT" ]; then
	export INIT=true
	$SCRIPT
	exit 0
else
	clear

	echo "An Error Has Occurred!"
	echo "======================"
	echo "If you see this in error, please notify me at either xda or rootzwiki"
	echo "if you prefer email you can reach me at mishana@swordrune10.net"
	echo "if your also inclined, i have a freenode channel #Swordrune10Kitchen"
	read -p "Press Enter to exit.." done
	kill 0
fi
