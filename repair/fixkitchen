#!/bin/bash
# Written by Sean Donovan (swordrune10)

if [ ! "$INIT" ]; then
	cd $(dirname $0)
	export SCRIPT=$(echo "fixkitchen")
	../headerfile
	exit 0
fi

menu () {
clear

echo "Swordrune10's Android Kitchen!"
echo "=============================="
echo "Something is not working right? What should we do?"
echo "Purge = remove files, download from origin"
echo "Delete = delete it!"
echo "  1. Add a repo to a certain local_manifests folder"
echo "  2. Purge a certain local_manifests folder"
echo "  3. Purge/Delete a certain repository"
echo "  4. Purge/Delete all the repositories"
echo "  5. Purge/Delete the Kitchen app"
echo "  6. Delete the Kitchen app, and its dependencies"
echo "  7. Delete entire computer"
echo "  8. Delete the internet"
echo "  9. Go Back"
echo ""
echo "Which one would you like to do?"
read cleananswer

if [ ! "$cleananswer" ] || ( echo $cleananswer | grep -q [A-Za-z] ) || [ $cleananswer -gt "9" ]; then
	echo ""
	echo "You did not make a proper selection, try again!"
	read -p "Press Enter to continue: " done
	menu
fi

if [ $cleananswer == "1" ]; then
	clear

	echo "which repo would you like to modify?"
	echo "aokp = Android Open Kang Project"
	echo "aosp = Android Open Source Project"
	echo "bamf = BAMF Paradigm"
	echo "bugless = Bugless Beast"
	echo "cna = Codename Android"
	echo "cm9 = Cyanogenmod 9"
	echo "cm10 = Cyanogenmod 10"
	echo "cm = Cyanogenmod 10.2"
	echo "ev = Evervolv"
	echo "paranoid = ParanoidAndroid"
	echo "raosp = Rooted & Busyboxed AOSP"
	echo "gummy = Team Gummy"
	echo "type exit to go to back"
	read addrepo

	if [ "$addrepo" == "" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	elif [ $addrepo == "exit" ]; then
		echo ""
		read -p "Press Enter to continue: " done
		menu
	fi

	if [ $addrepo == "aokp" ]; then
		script_repo=$(echo "aokp")
		repo_platform=$(echo "jb")
		repo_name=$(echo "Android Open Kang Project")
		adddevicetorepo
	fi

	if [ $addrepo == "aosp" ]; then
		script_repo=$(echo "aosp")
		repo_platform=$(echo "jb")
		repo_name=$(echo "Android Open Source Project")
		adddevicetorepo
	fi

	if [ $addrepo == "bamf" ]; then
		script_repo=$(echo "bamf")
		repo_platform=$(echo "jb")
		repo_name=$(echo "BAMF Paradigm")
		adddevicetorepo
	fi

	if [ $addrepo == "bugless" ]; then
		script_repo=$(echo "bugless")
		repo_platform=$(echo "jb")
		repo_name=$(echo "Bugless Beast")
		adddevicetorepo
	fi

	if [ $addrepo == "cna" ]; then
		script_repo=$(echo "cna")
		repo_platform=$(echo "jb")
		repo_name=$(echo "Codename Android")
		adddevicetorepo
	fi

	if [ $addrepo == "cm9" ]; then
		script_repo=$(echo "cm")
		repo_platform=$(echo "ics")
		repo_name=$(echo "Cyanogenmod 9")
		adddevicetorepo
	fi

	if [ $addrepo == "cm10" ]; then
		script_repo=$(echo "cm")
		repo_platform=$(echo "jb")
		repo_name=$(echo "Cyanogenmod 10")
		adddevicetorepo
	fi

	if [ $addrepo == "cm10.2" ]; then
		script_repo=$(echo "cm")
		repo_platform=$(echo "10.2")
		repo_name=$(echo "Cyanogenmod 10.2")
		adddevicetorepo
	fi

	if [ $addrepo == "ev" ]; then
		script_repo=$(echo "evervolv")
		repo_platform=$(echo "jb")
		repo_name=$(echo "Evervolv")
		adddevicetorepo
	fi

	if [ $addrepo == "paranoid" ]; then
		script_repo=$(echo "paranoid")
		repo_platform=$(echo "jb")
		repo_name=$(echo "ParanoidAndroid")
		adddevicetorepo
	fi

	if [ $addrepo == "raosp" ]; then
		script_repo=$(echo "raosp")
		repo_platform=$(echo "jb")
		repo_name=$(echo "Rooted & Busyboxed AOSP")
		adddevicetorepo
	fi

	if [ $addrepo == "gummy" ]; then
		script_repo=$(echo "gummy")
		repo_platform=$(echo "jb")
		repo_name=$(echo "Team Gummy")
		adddevicetorepo
	fi

	echo ""
	echo "Finished!"
	read -p "Press Enter to continue: " done
fi

if [ $cleananswer == "2" ]; then
	clear

	echo "which repo would you like to modify?"
	echo "aokp = Android Open Kang Project"
	echo "aosp = Android Open Source Project"
	echo "bamf = BAMF Paradigm"
	echo "bugless = Bugless Beast"
	echo "cna = Codename Android"
	echo "cm9 = Cyanogenmod 9"
	echo "cm10 = Cyanogenmod 10"
	echo "cm = Cyanogenmod 10.2"
	echo "ev = Evervolv"
	echo "paranoid = ParanoidAndroid"
	echo "raosp = Rooted & Busyboxed AOSP"
	echo "gummy = Team Gummy"
	echo "type exit to go to back"
	read cleanse

	if [ "$cleanse" == "" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	elif [ $cleanse == "exit" ]; then
		echo ""
		read -p "Press Enter to continue: " done
		menu
	fi

	if [ $cleanse == "aokp" ]; then
		export SCRIPT_REPO=$(echo "aokp")
		export REPO_PLATFORM=$(echo "jb")
		repo_name=$(echo "Android Open Kang Project")
		purgelocalmanifest
	fi

	if [ $cleanse == "aosp" ]; then
		export SCRIPT_REPO=$(echo "aosp")
		export REPO_PLATFORM=$(echo "jb")
		repo_name=$(echo "Android Open Source Project")
		purgelocalmanifest
	fi

	if [ $cleanse == "bamf" ]; then
		export SCRIPT_REPO=$(echo "bamf")
		export REPO_PLATFORM=$(echo "jb")
		repo_name=$(echo "BAMF Paradigm")
		purgelocalmanifest
	fi

	if [ $cleanse == "bugless" ]; then
		export SCRIPT_REPO=$(echo "bugless")
		export REPO_PLATFORM=$(echo "jb")
		repo_name=$(echo "Bugless Beast")
		purgelocalmanifest
	fi

	if [ $cleanse == "cna" ]; then
		export SCRIPT_REPO=$(echo "cna")
		export REPO_PLATFORM=$(echo "jb")
		repo_name=$(echo "Codename Android")
		purgelocalmanifest
	fi

	if [ $cleanse == "cm9" ]; then
		export SCRIPT_REPO=$(echo "cm")
		export REPO_PLATFORM=$(echo "ics")
		repo_name=$(echo "Cyanogenmod 9")
		purgelocalmanifest
	fi

	if [ $cleanse == "cm10" ]; then
		export SCRIPT_REPO=$(echo "cm")
		export REPO_PLATFORM=$(echo "jb")
		repo_name=$(echo "Cyanogenmod 10")
		purgelocalmanifest
	fi

	if [ $cleanse == "cm10.2" ]; then
		export SCRIPT_REPO=$(echo "cm")
		export REPO_PLATFORM=$(echo "10.2")
		repo_name=$(echo "Cyanogenmod 10.2")
		purgelocalmanifest
	fi

	if [ $cleanse == "ev" ]; then
		export SCRIPT_REPO=$(echo "evervolv")
		export REPO_PLATFORM=$(echo "jb")
		repo_name=$(echo "Evervolv")
		purgelocalmanifest
	fi

	if [ $cleanse == "paranoid" ]; then
		export SCRIPT_REPO=$(echo "paranoid")
		export REPO_PLATFORM=$(echo "jb")
		repo_name=$(echo "ParanoidAndroid")
		purgelocalmanifest
	fi

	if [ $cleanse == "raosp" ]; then
		export SCRIPT_REPO=$(echo "raosp")
		export REPO_PLATFORM=$(echo "jb")
		repo_name=$(echo "Rooted & Busyboxed AOSP")
		purgelocalmanifest
	fi

	if [ $cleanse == "gummy" ]; then
		export SCRIPT_REPO=$(echo "gummy")
		export REPO_PLATFORM=$(echo "jb")
		repo_name=$(echo "Team Gummy")
		purgelocalmanifest
	fi

	echo ""
	echo "Finished!"
	read -p "Press Enter to continue: " done
fi

if [ $cleananswer == "3" ]; then
	clear

	echo ""
	echo "which repo would you like to modify?"
	echo "aokp = Android Open Kang Project"
	echo "aosp = Android Open Source Project"
	echo "bamf = BAMF Paradigm"
	echo "bugless = Bugless Beast"
	echo "cna = Codename Android"
	echo "cm9 = Cyanogenmod 9"
	echo "cm10 = Cyanogenmod 10"
	echo "cm = Cyanogenmod 10.2"
	echo "ev = Evervolv"
	echo "paranoid = ParanoidAndroid"
	echo "raosp = Rooted & Busyboxed AOSP"
	echo "gummy = Team Gummy"
	echo "type exit to go to back"
	read modify

	if [ ! "$modify" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	elif [ $modify == "exit" ]; then
		echo ""
		read -p "Press Enter to continue: " done
		menu
	fi

	echo ""
	echo "Purge or Delete?"
	echo "Purge = remove files, download from origin"
	echo "Delete = delete it!"
	echo "type exit to go to back"
	read remover

	if [ ! "$remover" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	elif [ $remover == "exit" ]; then
		echo ""
		read -p "Press Enter to continue: " done
		menu
	fi

	cd $REPOS/$modify

	if [ $remover == "Purge" ] || [ $remover == "purge" ]; then
		reposync -p -u $modify
	elif [ $remover == "Delete" ] || [ $remover == "delete" ]; then
		reposync -d $modify
	fi

	echo ""
	echo "Finished!"
	read -p "Press Enter to continue: " done
fi

if [ $cleananswer == "4" ]; then
	clear

	echo ""
	echo "Purge or Delete the repositories?"
	echo "Purge = remove files, download from origin"
	echo "Delete = delete it!"
	echo "type exit to go to back"
	read remover

	if [ ! "$remover" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	elif [ $remover == "exit" ]; then
		echo ""
		read -p "Press Enter to continue: " done
		menu
	fi

	if [ $remover == "Purge" ] || [ $remover == "purge" ]; then
		reposync -p -u allthethings
	elif [ $remover == "Delete" ] || [ $remover == "delete" ]; then
		rm -rf $REPOS
	fi

	echo ""
	echo "Finished!"
	read -p "Press Enter to continue: " done
fi

if [ $cleananswer == "5" ]; then
	clear

	echo ""
	echo "Purge or Delete?"
	echo "Purge = remove files, download from origin"
	echo "Delete = delete it!"
	echo "type exit to go back"
	read remover

	if [ ! "$remover" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	elif [ $remover == "exit" ]; then
		echo ""
		read -p "Press Enter to continue: " done
		menu
	fi

	cd $LOCAL/..

	if [ $remover == "Purge" ] || [ $remover == "purge" ]; then
		export AUTHOR="redeemer"
		scriptmakir

		echo ""
		echo "Switching to Redeemer script.."
		echo ""
		./redeemer
		rm -rf $LOCAL/../redeemer

		echo ""
		echo "Finished!"
		read -p "Press Enter to continue: " done
	elif [ $remover == "Delete" ] || [ $remover == "delete" ]; then
		echo ""
		echo "Are you sure you want to remove the Kitchen app?"
		echo "You must type in \"yes\" to continue"
		echo ""
		echo "Type in anything else to abort operation"
		read -p "yes/no? " destroyer

		if [ ! "$destroyer" ]; then
			echo ""
			echo "You didn't type in anything.."
			read -p "Press Enter to continue: " done
			menu
		elif [ ! $destroyer == "yes" ]; then
			echo ""
			echo "Aborting.."
			read -p "Press Enter to continue: " done
		fi

		if [ $destroyer == "yes" ]; then
			export AUTHOR="destroyer"
			scriptmakir

			echo ""
			echo "Thank you for using Swordrune10's Kitchen!"
			echo "Switching to Destroyer script.."
			echo ""
			./destroyer
			exit 0
		fi
	fi
fi

if [ $cleananswer == "6" ]; then
	clear

	echo ""
	echo "Are you sure you want to remove the Kitchen app and its dependencies?"
	echo "Please note: the builds directory will not be deleted?"
	echo "You must type in \"yes\" to continue"
	echo ""
	echo "Type in anything else to abort operation"
	read -p "yes/no? " destroyerofworlds

	if [ ! "$destroyerofworlds" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	elif [ ! $destroyerofworlds == "yes" ]; then
		echo ""
		echo "Aborting.."
		read -p "Press Enter to continue: " done
	fi

	if [ $destroyerofworlds == "yes" ]; then
		export AUTHOR="destroyerofworlds"
		scriptmakir

		echo ""
		echo "Thank you for using Swordrune10's Kitchen!"
		echo "Switching to Destroyer of Worlds script.."
		echo ""
		cd $LOCAL/..
		./destroyerofworlds
		exit 0
	fi
fi

if [ $cleananswer == "7" ]; then
	clear

	echo ""
	echo "Are you sure..? this will delete everything on your computer, including mounted external drives and flash drives!!"
	echo "You must type in \"yes, please delete everything off of my computer\" to continue"
	echo ""
	echo "Type in anything else to bail out"
	read suicidenote

	if [ ! "$suicidenote" ]; then
		echo ""
		echo "You didn't type in anything.."
		read -p "Press Enter to continue: " done
		menu
	fi

	if [ ! $suicidenote == "yes, please delete everything off of my computer" ]; then
		echo ""
		echo "Please dont try that again..."
	elif [ $suicidenote == "yes, please delete everything off of my computer" ]; then
		echo ""
		echo "Please type in your password to destroy everything"
		sudo rm -rf /
	fi

	echo ""
	echo "Finished!"
	read -p "Press Enter to continue: " done
fi

if [ $cleananswer == "8" ]; then
	echo "Oh man, I bet you wish it was that easy!"
	echo ""
	echo "Aborting.."
	read -p "Press Enter to continue: " done
fi

if [ $cleananswer == "9" ]; then
	echo ""
	read -p "Returning to Main Menu, Press Enter to continue: " done
	exit 0
fi

menu
}

adddevicetorepo() {
localmanifests=$( echo "$REPOS/$script_repo-$repo_platform/.repo/local_manifests" )

if ( ! find $local_manifests &> /dev/null ); then
	mkdir $local_manifests
fi

mkdir -p $LOCAL/../temp

echo "  <project name=\"GITHUB ACCOUNT/PROJECT\" \
path=\"PATH INSIDE REPO\" \
remote=\"github\" \
revision=\"PROJECT BRANCH\" />" > $LOCAL/../temp/addrepo

nano $LOCAL/../temp/addrepo

echo ""
echo "Adding repo to otherdevices.xml for $repo_name.."
cd $local_manifests

if ( ! find $local_manifests/otherdevices.xml &> /dev/null ); then
	export AUTHOR="otherdevicesxml"
	scriptmakir
fi

sed -i "/<\/manifest>/d" otherdevices.xml
cat $LOCAL/../temp/addrepo  >> otherdevices.xml
echo "</manifest>" >> otherdevices.xml
rm -r $LOCAL/../temp
}

purgelocalmanifest() {
rm -rf $REPOS/$SCRIPT_REPO-$REPO_PLATFORM/.repo/local_manifests
preupdate
echo "Purged $repo_name local_manifests folder"
}
menu
